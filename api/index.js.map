{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/auth.server.ts", "../app/session.server.tsx", "../app/routes/dashboard.guilds.$guild.meetings.$meeting.tsx", "../app/utils/hooks.tsx", "../app/components/insight/transactionModal.tsx", "../app/utils/supabase.tsx", "../app/utils/db.tsx", "../app/utils/discord.tsx", "../app/utils/timestamp.tsx", "../app/utils/ai.tsx", "../app/components/insight/templateBuilder.tsx", "../app/components/participants.tsx", "../app/routes/dashboard.guilds.$guild.meetings._index.tsx", "../app/routes/dashboard.guilds.$guild.tsx", "../app/context/selectedMeetingContext.tsx", "../app/routes/dashboard.guilds._index.tsx", "../app/routes/transcript.$transcript.tsx", "../app/routes/auth.discord.callback.tsx", "../app/routes/auth.discord.logout.tsx", "../app/routes/transcript._index.tsx", "../app/routes/dashboard._index.tsx", "../app/routes/auth.discord.tsx", "../app/routes/dashboard.tsx", "../app/components/faq.tsx", "../app/routes/privacy.tsx", "../app/routes/_index.tsx", "../app/components/nav.tsx", "../app/routes/login.tsx", "../app/components/landing/headline.tsx", "../app/components/landing/how.tsx", "../app/components/landing/features.tsx", "../app/components/landing/contact.tsx", "../app/components/landing/footer.tsx", "../app/components/landing.tsx", "../app/routes/terms.tsx", "../app/routes/api.tsx", "../app/routes/new.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { json, type LinksFunction, type LoaderFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport stylesheet from \"~/tailwind.css\";\nimport type { DiscordUser } from \"./auth.server\";\nimport { auth } from \"./auth.server\";\nimport { Analytics } from \"@vercel/analytics/react\";\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: stylesheet },\n];\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let user = await auth.isAuthenticated(request);\n\n  if (!user) {\n    return json({ user: undefined });\n  }\n  return json({ user });\n};\nexport default function App() {\n  useLoaderData<{ user: DiscordUser | undefined }>();\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n\n      <body>\n        <Outlet />\n        <Analytics />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "// app/auth.server.ts\nimport { Authenticator } from \"remix-auth\";\nimport type { DiscordProfile, PartialDiscordGuild } from \"remix-auth-discord\";\nimport { DiscordStrategy } from \"remix-auth-discord\";\nimport { sessionStorage } from \"~/session.server\";\nimport { config } from \"dotenv\";\n\nconfig();\n\nexport interface DiscordUser {\n  id: DiscordProfile[\"id\"];\n  displayName: DiscordProfile[\"displayName\"];\n  avatar: DiscordProfile[\"__json\"][\"avatar\"];\n  discriminator: DiscordProfile[\"__json\"][\"discriminator\"];\n  email: DiscordProfile[\"__json\"][\"email\"];\n  guilds?: Array<PartialDiscordGuild>;\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport const auth = new Authenticator<DiscordUser>(sessionStorage);\n\nconst discordStrategy = new DiscordStrategy(\n  {\n    clientID: process.env.DISCORD_CLIENT_ID || \"\",\n    clientSecret: process.env.DISCORD_CLIENT_SECRET || \"\",\n    callbackURL:\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:3000/auth/discord/callback\"\n        : \"https://hearhear.vercel.app/auth/discord/callback\",\n    // Provide all the scopes you want as an array\n    scope: [\"identify\", \"email\", \"guilds\"],\n  },\n  async ({\n    accessToken,\n    refreshToken,\n    extraParams,\n    profile,\n  }): Promise<DiscordUser> => {\n    /**\n     * Get the user data from your DB or API using the tokens and profile\n     * For example query all the user guilds\n     * IMPORTANT: This can quickly fill the session storage to be too big.\n     * So make sure you only return the values from the guilds (and the guilds) you actually need\n     * (eg. omit the features)\n     * and if that's still to big, you need to store the guilds some other way. (Your own DB)\n     *\n     * Either way, this is how you could retrieve the user guilds.\n     */\n    const userGuilds: Array<PartialDiscordGuild> = await (\n      await fetch(\"https://discord.com/api/v10/users/@me/guilds\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n    )?.json();\n    /**\n     * In this example we're only interested in guilds where the user is either the owner or has the `MANAGE_GUILD` permission (This check includes the `ADMINISTRATOR` permission)\n     */\n    const guilds: Array<PartialDiscordGuild> = userGuilds.filter(\n      (g) => g.owner || (BigInt(g.permissions) & BigInt(0x20)) == BigInt(0x20)\n    );\n\n    /**\n     * Construct the user profile to your liking by adding data you fetched etc.\n     * and only returning the data that you actually need for your application.\n     */\n    return {\n      id: profile.id,\n      displayName: profile.__json.username,\n      avatar: profile.__json.avatar,\n      discriminator: profile.__json.discriminator,\n      email: profile.__json.email,\n      accessToken,\n      guilds,\n      refreshToken,\n    };\n  }\n);\n\nauth.use(discordStrategy);\n", "// app/session.server.ts\nimport { createCookieSessionStorage } from \"@remix-run/node\";\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\",\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n    secrets: [\"s3cr3t\"],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nexport const { getSession, commitSession, destroySession } = sessionStorage;\n", "import {\n  useInsightArrayEffect,\n  useRouteData,\n  useRouteParam,\n} from \"~/utils/hooks\";\nimport { type Meeting } from \"~/utils/db\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { GenerateInsight } from \"~/components/insight/transactionModal\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport { DocumentTextIcon } from \"@heroicons/react/24/outline\";\nimport { useEffect, useState } from \"react\";\nimport type { Insight } from \"~/utils/supabase\";\nimport { createSupabaseClient } from \"~/utils/supabase\";\nimport ReactMarkdown from \"react-markdown\";\nimport * as NoMeetingAnimation from \"~/assets/lottie/no-meeting.json\";\nimport { useLottie } from \"lottie-react\";\nimport { Participants } from \"~/components/participants\";\nimport { convertUNIXToString } from \"~/utils/timestamp\";\n\nexport const loader: LoaderFunction = () => {\n  return json({\n    openai_key: process.env.OPENAI_API_KEY,\n    supabaseKey: process.env.SUPABASE_KEY,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const supabase = createSupabaseClient(process.env.SUPABASE_KEY!);\n  const data = await request.formData();\n\n  const inputFields = JSON.parse(data.get(\"inputFields\")?.toString() || \"[]\");\n  const guildId = JSON.parse(data.get(\"guildId\")?.toString() || \"{}\");\n  const channelId = JSON.parse(data.get(\"channelId\")?.toString() || \"{}\");\n  const meetingId = JSON.parse(data.get(\"meetingId\")?.toString() || \"{}\");\n  const userId = JSON.parse(data.get(\"userId\")?.toString() || \"{}\");\n\n  await supabase.saveProcessedTranscripts(\n    guildId,\n    channelId,\n    meetingId,\n    process.env.S3_BUCKET_REGION!,\n    process.env.S3_BUCKET_NAME!\n  );\n\n  // guildId, channelId, meetingId, sections, userId\n\n  fetch(\"https://url770sa6k.execute-api.us-west-2.amazonaws.com/dev/insight\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      sections: inputFields,\n      guildId,\n      channelId,\n      meetingId,\n      userId,\n    }),\n  }).catch((err) => console.log(err));\n\n  return null;\n};\n\nexport default function MeetingPage() {\n  let { supabaseKey } = useLoaderData<typeof loader>();\n\n  const meetings =\n    useRouteData<Meeting[]>(\"routes/dashboard.guilds.$guild\") || [];\n\n  const user = useRouteData<{ user: DiscordUser }>(\"root\")?.user;\n  const meetingId = useRouteParam<string>(\"routes/dashboard\", \"meeting\")?.split(\n    \"-\"\n  )[1];\n\n  const thisMeeting = meetings.find((meeting) => meeting.id === meetingId);\n  const [insights, setInsights] = useState<Insight[]>([]);\n  const [loadingInsights, setLoadingInsights] = useState<boolean>(false);\n  const [pendingJob, setPendingJob] = useState<boolean>(false);\n\n  const [supabase] = useState(() => createSupabaseClient(supabaseKey!));\n  const supabaseClient = supabase.getClient();\n\n  const fetchInsights = async () => {\n    setLoadingInsights(true);\n    const retrievedInsights = await supabase.getInsights(thisMeeting!.id);\n\n    setInsights(retrievedInsights);\n    setLoadingInsights(false);\n  };\n\n  useEffect(() => {\n    const channel = supabaseClient\n      .channel(`${user!.id}-insights-update`)\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"UPDATE\",\n          schema: \"public\",\n          table: \"insights\",\n          filter: `meeting_id=eq.${meetingId}`,\n        },\n        () => {\n          fetchInsights();\n          setPendingJob(false);\n        }\n      )\n      .on(\n        \"postgres_changes\",\n        {\n          event: \"INSERT\",\n          schema: \"public\",\n          table: \"insights\",\n          filter: `meeting_id=eq.${meetingId}`,\n        },\n        () => {\n          setPendingJob(true);\n        }\n      )\n      .subscribe((message) => {\n        console.log(message);\n      });\n\n    // const channelUpdate =\n\n    // const channelInsert = supabaseClient\n    //   .channel(`${user!.id}-insights-insert`)\n\n    //   .subscribe();\n\n    return () => {\n      supabaseClient.removeChannel(channel);\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useInsightArrayEffect(() => {\n    fetchInsights();\n  }, [insights, thisMeeting!.id]);\n\n  return (\n    <div className=\"p-10 min-h-screen whitespace-pre-line  max-w-4xl\">\n      <h1 className=\"text-3xl font-bold flex items-center\">\n        Insight\n        <span className=\"ml-3\">\n          <GenerateInsight\n            meeting={thisMeeting}\n            supabaseKey={supabaseKey}\n            user={user!}\n            fetchInsights={fetchInsights}\n          />\n        </span>\n        <span className=\"ml-3\">\n          <div className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold p-1 rounded-full\">\n            <Link\n              to={`/transcript/${thisMeeting?.guildId}-${thisMeeting?.channelId}-${thisMeeting?.id}`}\n              target=\"_blank\"\n            >\n              <DocumentTextIcon className=\"text-white stroke-2 h-5 w-5\" />\n            </Link>\n          </div>\n        </span>\n      </h1>\n\n      <div className=\"mt-10\">\n        <Participants meeting={thisMeeting!} />\n\n        <div className=\"border-b-2 border-gray-200 \"></div>\n        <h1 className=\"text-xl font-bold mt-10\">Insights</h1>\n        <div className=\"text-gray-500 text-sm mt-2\">\n          {pendingJob && (\n            <ul>\n              <li>\u2714\uFE0F processed all transcripts</li>\n              {/* make the li fade in and out */}\n              <li className=\"animate-pulse\">\n                \u23F3 generating insights (this might take minutes if it's a large\n                meeting. time to grab a coffee!)\n              </li>\n            </ul>\n          )}\n        </div>\n        {loadingInsights ? (\n          <div className=\"mt-5\">Loading...</div>\n        ) : (\n          <Collapsible insights={insights} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Collapsible({ insights }: { insights: Insight[] }) {\n  const options = {\n    animationData: NoMeetingAnimation,\n    loop: true,\n  };\n\n  const { View } = useLottie(options);\n  if (insights.length === 0) {\n    return (\n      <div className=\"flex flex-col items-center h-full\">\n        <div className=\"w-40 h-40\">{View}</div>\n        <p className=\"text-md font-bold text-gray-600 mt-5\">\n          No insights generated yet\n        </p>\n      </div>\n    );\n  }\n  return (\n    <div className=\"mt-5\">\n      {insights.map((insight, id) => (\n        <div key={id}>\n          <CollapsibleItem insight={insight} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction CollapsibleItem({ insight }: { insight: Insight }) {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <div className=\"border-b-2 border-gray-200\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-lg font-bold\">\n          Generated by {insight.displayName} -{\" \"}\n          {convertUNIXToString(String(Date.parse(insight.created_at)))}\n        </h1>\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-1 px-2 rounded-full\"\n        >\n          {isOpen ? \"Hide\" : \"Show\"}\n        </button>\n      </div>\n      {isOpen && (\n        <div className=\"mt-5\">\n          <ReactMarkdown>{insight.text}</ReactMarkdown>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport type { Meeting } from \"./db\";\nimport type { Insight } from \"./supabase\";\n\nexport const useRouteData = <T,>(routeId: string): T | undefined => {\n  const matches = useMatches();\n  const data = matches.find((match) => match.id === routeId)?.data;\n\n  return data as T | undefined;\n};\n\nexport const useRouteParam = <T,>(\n  routeId: string,\n  paramName: string\n): T | undefined => {\n  const matches = useMatches();\n  const param = matches.find((match) => match.id === routeId)?.params?.[\n    paramName\n  ];\n\n  return param as T | undefined;\n};\n\nfunction meetingArrayEqual(a1: Meeting[], a2: Meeting[]) {\n  if (a1.length !== a2.length) return false;\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i].id !== a2[i].id) return false;\n    if (a1[i].guildId !== a2[i].guildId) return false;\n    if (a1[i].channelName !== a2[i].channelName) return false;\n  }\n  return true;\n}\n\ntype MaybeCleanUpFn = void | (() => void);\n\nexport const useMeetingArrayEffect = (\n  cb: () => MaybeCleanUpFn,\n  deps: Meeting[]\n) => {\n  const ref = useRef<Meeting[]>(deps);\n\n  if (!meetingArrayEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(cb, [ref.current]);\n};\n\nfunction insightArrayEqual(\n  a1: Insight[],\n  a2: Insight[],\n  meetingId1: string,\n  meetingId2: string,\n  insightText1?: string | null | undefined,\n  insightText2?: string | null | undefined\n) {\n  if (meetingId1 !== meetingId2) return false;\n  if (insightText1 !== insightText2) return false;\n  if (a1.length !== a2.length) return false;\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i].id !== a2[i].id) return false;\n  }\n  return true;\n}\nexport const useInsightArrayEffect = (\n  cb: () => MaybeCleanUpFn,\n  deps: [Insight[], string]\n) => {\n  const ref = useRef<[Insight[], string]>(deps);\n\n  if (!insightArrayEqual(deps[0], ref.current[0], deps[1], ref.current[1])) {\n    ref.current = deps;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(cb, [ref.current]);\n};\n", "import { Fragment, useEffect, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { BanknotesIcon, PlusIcon } from \"@heroicons/react/24/outline\";\nimport { type Meeting } from \"~/utils/db\";\nimport { createSupabaseClient } from \"~/utils/supabase\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport { TemplateBuilder } from \"./templateBuilder\";\n\ntype prop = {\n  meeting: Meeting | undefined;\n  supabaseKey: string | undefined;\n  user: DiscordUser;\n  fetchInsights: () => void;\n};\n\nconst INSIGHT_GENERATION_COST = 0;\n\nconst preBuiltTemplates: Record<number, string[]> = {\n  0: [\"Subject\", \"Summary\", \"Action Items (by participants)\"],\n  1: [\"Subject\", \"Summary\", \"Frequently Asked Questions (by participant)\"],\n};\n\nexport const GenerateInsight: React.FC<prop> = ({\n  meeting,\n  supabaseKey,\n  user,\n  fetchInsights,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [userCredits, setUserCredits] = useState(0);\n  const [inputFields, setInputFields] = useState<string[]>(\n    preBuiltTemplates[0]\n  );\n\n  const cancelButtonRef = useRef(null);\n\n  const handleSetInputFields = (value: string[]) => {\n    setInputFields(value);\n  };\n\n  const supabase = createSupabaseClient(supabaseKey!);\n\n  useEffect(() => {\n    setLoading(true);\n    const getCredits = async () => {\n      try {\n        const credits = await supabase.getUserCredits(user);\n        setUserCredits(credits);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCredits();\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userCredits]);\n\n  const handleTransaction = async () => {\n    await directToPurchase();\n  };\n\n  const directToPurchase = async () => {\n    // window.open(\n    //   `https://oneshot.lemonsqueezy.com/checkout?cart=1a360fe5-70f9-421a-a448-79d11ab0ace1`,\n    //   \"_blank\"\n    // );\n    try {\n      //TODO\n      await supabase.addCredit(user, userCredits, 100);\n      setUserCredits(userCredits + 100);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = async (e: any) => {\n    setLoading(true);\n    let formData = new FormData();\n\n    formData.append(\"requestType\", JSON.stringify(\"generateInsightForMeeting\"));\n    formData.append(\"inputFields\", JSON.stringify(inputFields));\n    formData.append(\"guildId\", JSON.stringify(meeting!.guildId));\n    formData.append(\"channelId\", JSON.stringify(meeting!.channelId));\n    formData.append(\"meetingId\", JSON.stringify(meeting!.id));\n    formData.append(\"userId\", JSON.stringify(user.id));\n    formData.append(\"userCredits\", JSON.stringify(userCredits));\n    formData.append(\n      \"insightGenerationCost\",\n      JSON.stringify(INSIGHT_GENERATION_COST)\n    );\n\n    await fetch(\n      `/dashboard/guilds/${meeting!.guildId}/meetings/${meeting!.channelId}-${\n        meeting!.id\n      }`,\n      {\n        method: \"POST\",\n        body: formData,\n      }\n    ).catch((error) => {\n      console.log(error);\n    });\n    setLoading(false);\n    // await fetchInsights();\n    setOpen(false);\n  };\n  return (\n    <>\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-1 rounded-full disabled:bg-gray-400\"\n        onClick={() => setOpen(true)}\n        // disabled\n      >\n        <PlusIcon className=\"text-white stroke-2 h-5 w-5\" />\n      </button>\n\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-10\"\n          initialFocus={cancelButtonRef}\n          onClose={(v) => {\n            if (!loading) setOpen(v);\n          }}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n            <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              >\n                <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-2xl\">\n                  <div className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4\">\n                    <div className=\"sm:flex sm:items-start\">\n                      <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-slate-900 sm:mx-0 sm:h-10 sm:w-10\">\n                        <BanknotesIcon\n                          className=\"h-6 w-6 text-white\"\n                          aria-hidden=\"true\"\n                        />\n                      </div>\n                      <div className=\"mt-3 text-center w-full sm:ml-4 sm:mt-0 sm:text-left\">\n                        <Dialog.Title\n                          as=\"h1\"\n                          className=\"text-xl font-bold leading-6 text-gray-900\"\n                        >\n                          Insight Generation Confirmation\n                        </Dialog.Title>\n                        {loading ? (\n                          <div className=\"flex justify-center mt-3\">\n                            <h2 className=\"text-sm font-bold leading-6 text-sky-700\">\n                              If this is a long meeting, this may take a few\n                              minutes. Please do not close this window or\n                              refresh the page. But you can probably go get a\n                              coffee.\n                            </h2>\n                          </div>\n                        ) : (\n                          <TemplateBuilder\n                            inputFields={inputFields}\n                            setInputFields={handleSetInputFields}\n                            preBuiltTemplates={preBuiltTemplates}\n                          />\n                        )}\n                        <HasEnoughCredits userCredits={userCredits} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n                    {userCredits < INSIGHT_GENERATION_COST ? (\n                      <button\n                        type=\"button\"\n                        className=\"inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 sm:ml-3 sm:w-auto\"\n                        onClick={handleTransaction}\n                      >\n                        <span>Purchase Credits </span>\n                      </button>\n                    ) : (\n                      <>\n                        {loading ? (\n                          <button\n                            type=\"button\"\n                            disabled\n                            className=\"inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 sm:ml-3 sm:w-auto\"\n                          >\n                            <span>Generating...</span>\n                          </button>\n                        ) : (\n                          <button\n                            type=\"button\"\n                            className=\"inline-flex w-full justify-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 sm:ml-3 sm:w-auto\"\n                            onClick={handleSubmit}\n                          >\n                            <span>Confirm</span>\n                          </button>\n                        )}\n                      </>\n                    )}\n\n                    <button\n                      type=\"button\"\n                      className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                      onClick={() => {\n                        if (!loading) setOpen(false);\n                      }}\n                      ref={cancelButtonRef}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  );\n};\n\ntype HasEnoughCreditsProp = {\n  userCredits: number;\n};\nconst HasEnoughCredits: React.FC<HasEnoughCreditsProp> = ({ userCredits }) => {\n  return (\n    <div className=\"mt-10 border rounded-lg p-4 w-full\">\n      <p className=\"text-sm font-semibold\">Receipt Preview</p>\n      <div className=\"border-b my-2\"></div>\n      <div className=\"flex justify-between\">\n        <p className=\"text-sm text-gray-700\">Current Balance:</p>\n        <p className=\"text-sm text-gray-700\">{userCredits} credits</p>\n      </div>\n      <div className=\"flex justify-between\">\n        <p className=\"text-sm text-sky-800 font-bold\">Cost:</p>\n        <p className=\"text-sm text-sky-800 font-bold\">\n          {INSIGHT_GENERATION_COST === 0\n            ? \"free\"\n            : `${INSIGHT_GENERATION_COST} credits`}\n        </p>\n      </div>\n      <div className=\"border-t my-2\"></div>\n      <div className=\"flex justify-between\">\n        <p className=\"text-sm text-gray-700\">New Balance:</p>\n        <p className=\"text-sm text-gray-700\">\n          {userCredits < INSIGHT_GENERATION_COST ? (\n            <span className=\"text-red-500\">\n              {userCredits - INSIGHT_GENERATION_COST} credits\n            </span>\n          ) : (\n            <span className=\"text-green-500\">\n              {userCredits - INSIGHT_GENERATION_COST} credits\n            </span>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n", "import type { PostgrestError, SupabaseClient } from \"@supabase/supabase-js\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport type { BasicGuildInfo } from \"~/routes/dashboard\";\nimport { getProcessedTranscripts, type Meeting } from \"./db\";\n\nconst supabaseUrl = \"https://yjezghyuqbzwxoovnlwo.supabase.co\";\n\nexport function createSupabaseClient(key: string) {\n  return new MySupabaseClient(supabaseUrl, key);\n}\n\nexport type Insight = {\n  id: string;\n  created_at: string;\n  displayName: string;\n  discriminator: string;\n  text: string;\n};\n\nexport class MySupabaseClient {\n  supabase: SupabaseClient<any, \"public\", any>;\n\n  constructor(url: string, key: string) {\n    this.supabase = createClient(url, key);\n  }\n\n  public getClient() {\n    return this.supabase;\n  }\n\n  /**\n   * Add a user to supabase. If the user does not exist in the database,\n   * create a new user with 10 credits. Otherwise, do nothing.\n   *\n   * @param user the user to login. Retrieved from the Discord auth\n   * strategy\n   */\n  public async loginUser(user: DiscordUser) {\n    try {\n      const userExist = await this.checkIfExists(\"users\", \"id\", user.id);\n      if (!userExist) {\n        await this.supabase.from(\"users\").insert({\n          id: user.id,\n          display_name: user.displayName,\n          discriminator: user.discriminator,\n          credits: 500,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n  }\n\n  public async logErrorMessage(message: string, meetingId: string) {\n    await this.supabase.from(\"errors\").insert({\n      message,\n      meeting_id: meetingId,\n    });\n  }\n\n  /**\n   * Batch create guilds on supabase if they do not exist.\n   *\n   * @param userId the user id associated with the guilds\n   * @param guilds the guilds to add to the database\n   */\n  public async batchCreateGuilds(userId: string, guilds: BasicGuildInfo[]) {\n    console.log(\"inserting guilds\");\n    const guildsError = (\n      await this.supabase.from(\"guilds\").upsert(\n        guilds.map((guild) => ({\n          id: guild.id,\n          owner: guild.owner,\n        })),\n        { onConflict: \"id\", ignoreDuplicates: true }\n      )\n    ).error;\n\n    console.log(guildsError);\n\n    if (guildsError) {\n      throw new Error(guildsError.message);\n    }\n\n    console.log(\"inserting user-guild pairs\");\n    const { error } = await this.supabase.from(\"user_guild\").upsert(\n      guilds.map(\n        (guild) => ({\n          guild_id: guild.id,\n          user_id: userId,\n          hash: guild.id.concat(userId),\n        }),\n        { onConflict: \"hash\", ignoreDuplicates: true }\n      )\n    );\n    console.log(error);\n\n    if (error) {\n      throw new Error(error.message);\n    }\n\n    console.log(\"done\");\n  }\n\n  public async getUserCredits(user: DiscordUser) {\n    await this.loginUser(user);\n\n    const { data, error } = await this.supabase\n      .from(\"users\")\n      .select(\"credits\")\n      .eq(\"id\", user.id);\n\n    if (error) {\n      throw new Error(error.message);\n    }\n\n    if (data && data.length > 0) {\n      return data[0].credits;\n    }\n\n    return -1;\n  }\n\n  public async addCredit(\n    user: DiscordUser,\n    currentAmount: number,\n    amount: number\n  ) {\n    await this.loginUser(user);\n\n    const { error } = await this.supabase\n      .from(\"users\")\n      .update({ credits: currentAmount + amount })\n      .eq(\"id\", user.id);\n\n    if (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  public async saveProcessedTranscripts(\n    guildId: string,\n    channelId: string,\n    meetingId: string,\n    S3_BUCKET_REGION: string,\n    S3_BUCKET_NAME: string\n  ) {\n    const guildExist = await this.checkIfExists(\"guilds\", \"id\", guildId);\n\n    if (!guildExist) {\n      try {\n        await this.supabase.from(\"guilds\").insert({ id: guildId });\n      } catch (e) {\n        console.log(\"guild insert error:\", e);\n      }\n    }\n\n    const channelExist = await this.checkIfExists(\"channels\", \"id\", channelId);\n\n    if (!channelExist) {\n      try {\n        await this.supabase\n          .from(\"channels\")\n          .insert({ id: channelId, guild_id: guildId });\n      } catch (e) {\n        console.log(\"channel insert error:\", e);\n      }\n    }\n\n    const meetingExist = await this.checkIfExists(\"meetings\", \"id\", meetingId);\n    if (!meetingExist) {\n      try {\n        await this.supabase.from(\"meetings\").insert({\n          id: meetingId,\n          channel_id: channelId,\n          guild_id: guildId,\n        });\n      } catch (e) {\n        console.log(\"meeting insert error:\", e);\n      }\n    }\n\n    const exist = await this.checkIfExists(\n      \"transcripts\",\n      \"meeting_id\",\n      meetingId\n    );\n\n    if (!exist) {\n      const processedTranscripts = await getProcessedTranscripts(\n        guildId,\n        channelId,\n        meetingId,\n        S3_BUCKET_REGION,\n        S3_BUCKET_NAME\n      );\n      const { error } = await this.supabase.from(\"transcripts\").insert({\n        meeting_id: meetingId,\n        transcript: processedTranscripts,\n      });\n      if (error) {\n        throw new Error(error.message);\n      }\n    }\n  }\n\n  public async getInsights(meetingId: string) {\n    const { data, error } = await this.supabase\n      .from(\"insights\")\n      .select(\"*, user_id::text, meeting_id::text\")\n      .eq(\"meeting_id\", meetingId);\n\n    if (error) {\n      throw new Error(error.message);\n    }\n\n    if (data && data.length > 0) {\n      const insights: Insight[] = [];\n      await Promise.all(\n        data.map(async (row) => {\n          const user = await this.supabase\n            .from(\"users\")\n            .select(\"*\")\n            // @ts-ignore\n            .eq(\"id\", BigInt(row.user_id));\n\n          if (user.error) {\n            throw new Error(user.error.message);\n          }\n\n          const displayName =\n            user.data && user.data.length >= 1 ? user.data[0].display_name : \"\";\n          const discriminator =\n            user.data && user.data.length >= 1\n              ? user.data[0].discriminator\n              : \"\";\n\n          insights.push({\n            // @ts-ignore\n            id: row.id,\n            // @ts-ignore\n            created_at: row.created_at,\n            displayName,\n            discriminator,\n            // @ts-ignore\n            text: row.insight_text,\n          });\n        })\n      );\n      return insights;\n    }\n\n    return [];\n  }\n\n  // public async getParticipants(\n  //   meeting: Meeting,\n  //   S3_BUCKET_REGION: string,\n  //   S3_BUCKET_NAME: string\n  // ) {\n  //   // get the participants from the meetings table\n  //   const { data, error } = await this.supabase\n  //     .from(\"meetings\")\n  //     .select(\"participants\")\n  //     .eq(\"id\", meeting.id);\n\n  //   if (error) {\n  //     throw new Error(error.message);\n  //   }\n\n  //   if (data && data.length > 0) {\n  //     return data[0].participants;\n  //   } else {\n  //     const transcripts = await getTranscripts(\n  //       meeting.guildId,\n  //       meeting.channelId,\n  //       meeting.id,\n  //       S3_BUCKET_REGION,\n  //       S3_BUCKET_NAME\n  //     );\n\n  //     if (transcripts === null || transcripts.length === 0) {\n  //       throw new Error(\"No transcripts found or error fetching transcripts\");\n  //     }\n\n  //     await this.supabase\n  //       .from(\"meetings\")\n  //       .update({ participants: meeting.participants })\n  //       .eq(\"id\", meeting.id);\n  //   }\n  // }\n\n  public async uploadInsight(\n    meeting: Meeting,\n    userId: string,\n    insghtText: string\n  ) {\n    try {\n      const guildExist = await this.checkIfExists(\n        \"guilds\",\n        \"id\",\n        meeting.guildId\n      );\n\n      if (!guildExist) {\n        try {\n          await this.supabase.from(\"guilds\").insert({ id: meeting.guildId });\n        } catch (e) {\n          console.log(\"guild insert error:\", e);\n        }\n      }\n\n      const channelExist = await this.checkIfExists(\n        \"channels\",\n        \"id\",\n        meeting.channelId\n      );\n\n      if (!channelExist) {\n        try {\n          await this.supabase\n            .from(\"channels\")\n            .insert({ id: meeting.channelId, guild_id: meeting.guildId });\n        } catch (e) {\n          console.log(\"channel insert error:\", e);\n        }\n      }\n\n      const meetingExist = await this.checkIfExists(\n        \"meetings\",\n        \"id\",\n        meeting.id\n      );\n      if (!meetingExist) {\n        try {\n          await this.supabase.from(\"meetings\").insert({\n            id: meeting.id,\n            channel_id: meeting.channelId,\n            guild_id: meeting.guildId,\n          });\n        } catch (e) {\n          console.log(\"meeting insert error:\", e);\n        }\n      }\n\n      const { error } = await this.supabase.from(\"insights\").insert({\n        meeting_id: meeting.id,\n        user_id: userId,\n        insight_text: insghtText,\n      });\n      console.log(error);\n\n      if (error) {\n        throw new Error(error.message);\n      }\n    } catch (e) {\n      throw new Error((e as PostgrestError).message);\n    }\n  }\n\n  public async checkIfExists(\n    tableName: string,\n    columnToCheck: string,\n    value: string\n  ) {\n    const { data, error } = await this.supabase\n      .from(tableName)\n      .select(\"*\")\n      .eq(columnToCheck, value);\n\n    if (error) {\n      console.log(\"error:\", error);\n      throw error;\n    }\n\n    if ((data !== null || data !== undefined) && data.length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n//   public async getGuilds(userId: string) {\n\n//   public async guildExists(guild: BasicGuildInfo) {\n//     const { data, error } = await this.supabase\n//       .from(\"guilds\")\n//       .select(\"*\")\n//       .eq(\"id\", guild.id);\n\n//     if (error) {\n//       throw new Error(error.message);\n//     }\n//     if (data && data.length > 0) {\n//       await this.supabase.from(\"guilds\").update({ owner: guild.owner });\n//       return true;\n//     }\n//     return false;\n//   }\n// }\n\n// create insight -> check if there's a meeting -> if not create meeting -> create insight\n", "import {\n  S3Client,\n  ListObjectsV2Command,\n  GetObjectCommand,\n} from \"@aws-sdk/client-s3\";\nimport { getChannelNameById } from \"./discord\";\nimport { processTranscripts } from \"./ai\";\n\n// const S3_BUCKET_REGION = process.env.S3_BUCKET_REGION;\n// const S3_BUCKET_NAME = process.env.S3_BUCKET_NAME;\n// const S3_PUBLIC_URL = `https://${S3_BUCKET_NAME}.s3.${S3_BUCKET_REGION}.amazonaws.com/`;\n\nexport interface Meeting {\n  id: string; // the meeting id; which is also a unix timestamp\n  guildId: string; // the guild id\n  channelName: string; // the channel name\n  channelId: string; // the channel id\n  startTime: string; // the start time of the meeting in UNIX timestamp\n  endTime: string; // the end time of the meeting in UNIX timestamp,\n  // participants: string[]; // the participants of the meeting\n}\n\nexport interface Transcript {\n  filename: string;\n  audio: Promise<Uint8Array> | null;\n  text: string;\n}\n\nexport interface ProcessedTranscript {\n  username: string;\n  timestamp: string;\n  text: string;\n}\n\nexport async function downloadRecordingsAsZip(\n  guildId: string,\n  channelId: string,\n  meetingId: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n) {\n  const client = new S3Client({\n    region: S3_BUCKET_REGION,\n  });\n\n  const command = new ListObjectsV2Command({\n    Bucket: S3_BUCKET_NAME,\n    Prefix: guildId + \"/\" + channelId + \"/\" + meetingId,\n  });\n\n  try {\n    let isTruncated = true;\n    let contents: string[] = [];\n\n    while (isTruncated) {\n      const { Contents, IsTruncated, NextContinuationToken } =\n        await client.send(command);\n\n      if (Contents === undefined || IsTruncated === undefined) break;\n      Contents.map((c) => {\n        if (c.Key !== undefined) contents.push(c.Key);\n        return null;\n      });\n      isTruncated = IsTruncated;\n      command.input.ContinuationToken = NextContinuationToken;\n    }\n\n    const transcriptFilePaths = contents.filter((c) => c.endsWith(\".ogg\"));\n    const result: Array<{ filename: string; data: Uint8Array }> = [];\n    await Promise.all(\n      transcriptFilePaths.map(async (transcriptPath) => {\n        const byteArray = await getRecordingFileAsByteArray(\n          transcriptPath,\n          S3_BUCKET_REGION,\n          S3_BUCKET_NAME\n        );\n        // convert byteArray to blob\n        // const blob = new Blob([byteArray], { type: \"audio/ogg\" });\n        result.push({\n          filename: transcriptPath.split(\"/\").pop()!,\n          data: byteArray,\n        });\n      })\n    );\n\n    return result;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\n\nexport async function getProcessedTranscripts(\n  guildId: string,\n  channelId: string,\n  meetingId: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n): Promise<ProcessedTranscript[]> {\n  const client = new S3Client({\n    region: S3_BUCKET_REGION,\n  });\n\n  const command = new ListObjectsV2Command({\n    Bucket: S3_BUCKET_NAME,\n    Prefix: guildId + \"/\" + channelId + \"/\" + meetingId,\n  });\n\n  try {\n    let isTruncated = true;\n    let contents: string[] = [];\n    const transcripts: Transcript[] = [];\n\n    while (isTruncated) {\n      const { Contents, IsTruncated, NextContinuationToken } =\n        await client.send(command);\n\n      if (Contents === undefined || IsTruncated === undefined) break;\n      Contents.map((c) => {\n        if (c.Key !== undefined) contents.push(c.Key);\n        return null;\n      });\n      isTruncated = IsTruncated;\n      command.input.ContinuationToken = NextContinuationToken;\n    }\n\n    const transcriptFilePaths = contents.filter((c) => c.endsWith(\".txt\"));\n\n    await Promise.all(\n      transcriptFilePaths.map(async (transcriptPath) => {\n        const text = await getTextFromUrl(\n          transcriptPath,\n          S3_BUCKET_REGION,\n          S3_BUCKET_NAME\n        );\n\n        transcripts.push({\n          filename: transcriptPath.split(\"/\").pop()!,\n          audio: null,\n          text,\n        });\n      })\n    );\n\n    return processTranscripts(transcripts);\n  } catch (err) {\n    console.log(err);\n    return [];\n  }\n}\n\nexport async function getTranscripts(\n  guildId: string,\n  channelId: string,\n  meetingId: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string,\n  AWS_ACCESS_KEY_ID: string,\n  AWS_SECRET_ACCESS_KEY: string\n) {\n  const client = new S3Client({\n    region: S3_BUCKET_REGION!,\n    credentials: {\n      accessKeyId: AWS_ACCESS_KEY_ID!,\n      secretAccessKey: AWS_SECRET_ACCESS_KEY!,\n    },\n  });\n\n  const command = new ListObjectsV2Command({\n    Bucket: S3_BUCKET_NAME!,\n    Prefix: guildId + \"/\" + channelId + \"/\" + meetingId,\n  });\n\n  try {\n    let isTruncated = true;\n    let contents: string[] = [];\n    const transcripts: Transcript[] = [];\n\n    while (isTruncated) {\n      const { Contents, IsTruncated, NextContinuationToken } =\n        await client.send(command);\n\n      if (Contents === undefined || IsTruncated === undefined) break;\n      Contents.map((c) => {\n        if (c.Key !== undefined) contents.push(c.Key);\n        return null;\n      });\n      isTruncated = IsTruncated;\n      command.input.ContinuationToken = NextContinuationToken;\n    }\n\n    const transcriptFilePaths = contents.filter((c) => c.endsWith(\".txt\"));\n    await Promise.all(\n      transcriptFilePaths.map(async (transcriptPath) => {\n        const text = await getTextFromUrl(\n          transcriptPath,\n          S3_BUCKET_REGION,\n          S3_BUCKET_NAME\n        );\n\n        transcripts.push({\n          filename: transcriptPath.split(\"/\").pop()!,\n          audio: null,\n          text,\n        });\n      })\n    );\n\n    transcripts.map((t) => {\n      const audioFilePath =\n        guildId +\n        \"/\" +\n        channelId +\n        \"/\" +\n        meetingId +\n        \"/\" +\n        t.filename.replace(\".txt\", \".ogg\");\n      t.audio = getRecordingFileAsByteArray(\n        audioFilePath,\n        S3_BUCKET_REGION,\n        S3_BUCKET_NAME\n      );\n\n      return null;\n    });\n\n    return transcripts;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n}\n\nexport async function getTextFromUrl(\n  url: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n) {\n  try {\n    const client = new S3Client({\n      region: S3_BUCKET_REGION!,\n    });\n\n    const command = new GetObjectCommand({\n      Bucket: S3_BUCKET_NAME!,\n      Key: url,\n    });\n\n    const { Body } = await client.send(command);\n    if (Body === undefined) return \"\";\n    return await Body.transformToString();\n  } catch (err) {\n    console.log(err);\n    return \"\";\n  }\n}\n\nexport function getRecordingFileAsByteArray(\n  filePath: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n) {\n  return new Promise<Uint8Array>((resolve, reject) => {\n    try {\n      const client = new S3Client({\n        region: S3_BUCKET_REGION!,\n      });\n\n      const command = new GetObjectCommand({\n        Bucket: S3_BUCKET_NAME!,\n        Key: filePath,\n      });\n\n      client\n        .send(command)\n        .then(({ Body }) => {\n          if (Body === undefined) reject();\n          const byteArrayPromise = Body!.transformToByteArray();\n          byteArrayPromise.then((byteArray) => {\n            resolve(byteArray);\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          resolve(new Uint8Array());\n        });\n    } catch (err) {\n      console.log(err);\n      reject();\n    }\n  });\n}\n\nexport async function buildMeetings(files: string[]) {\n  const meetings: Record<string, Meeting> = {};\n  const channelNameCache: Record<string, string> = {};\n  files.map((file) => {\n    const [, channelId] = file.split(\"/\");\n    channelNameCache[channelId] = \"\";\n    return null;\n  });\n\n  const text_files = files.filter((file) => file.endsWith(\".txt\"));\n\n  await Promise.all(\n    Object.keys(channelNameCache).map(async (channelId) => {\n      const channelName = await getChannelNameById(channelId);\n      channelNameCache[channelId] = channelName;\n    })\n  );\n  const endTimes: Record<string, number> = {};\n  // const participants: Record<string, Set<string>> = {};\n\n  text_files.map((file) => {\n    const meetingId = file.split(\"/\")[2];\n    const filename = file.split(\"/\")[3];\n    const timestamp = parseInt(filename.split(\"-\")[0]);\n    if (endTimes[meetingId] === undefined) endTimes[meetingId] = timestamp;\n    if (timestamp > endTimes[meetingId]) endTimes[meetingId] = timestamp;\n\n    // if (participants[meetingId] === undefined)\n    //   participants[meetingId] = new Set();\n    // const participantId = filename.split(\"-\")[1].slice(0, -4);\n    // participants[meetingId].add(participantId);\n    return null;\n  });\n\n  text_files.map((file) => {\n    const [guildId, channelId, meetingId] = file.split(\"/\");\n    let channelName = channelNameCache[channelId];\n\n    meetings[meetingId] = {\n      id: meetingId,\n      guildId,\n      channelId,\n      channelName,\n      startTime: meetingId,\n      endTime: endTimes[meetingId].toString(),\n      // participants: Array.from(participants[meetingId]),\n    };\n    return null;\n  });\n\n  return Object.values(meetings);\n}\n\nexport async function getRecordingPathAsStrings(\n  guildId: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n): Promise<string[]> {\n  const client = new S3Client({\n    region: S3_BUCKET_REGION!,\n  });\n\n  const command = new ListObjectsV2Command({\n    Bucket: S3_BUCKET_NAME!,\n    Prefix: guildId,\n  });\n\n  try {\n    let isTruncated = true;\n    let contents: string[] = [];\n\n    while (isTruncated) {\n      const { Contents, IsTruncated, NextContinuationToken } =\n        await client.send(command);\n\n      if (Contents === undefined || IsTruncated === undefined) break;\n      Contents.map((c) => {\n        if (c.Key !== undefined) contents.push(c.Key);\n        return null;\n      });\n      isTruncated = IsTruncated;\n      command.input.ContinuationToken = NextContinuationToken;\n    }\n    return contents;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport async function getMeetings(\n  guildId: string,\n  S3_BUCKET_REGION: string,\n  S3_BUCKET_NAME: string\n) {\n  const files = await getRecordingPathAsStrings(\n    guildId,\n    S3_BUCKET_REGION,\n    S3_BUCKET_NAME\n  );\n  return await buildMeetings(files);\n}\n", "import type { Channel, DMChannel, PartialDMChannel } from \"discord.js\";\nimport { config } from \"dotenv\";\nconfig();\n\nexport async function getChannelObject(channelId: string) {\n  const response = await fetch(\n    `https://discord.com/api/channels/${channelId}`,\n    {\n      headers: {\n        Authorization: `Bot ${process.env.DISCORD_BOT_TOKEN || \"\"}`,\n      },\n    }\n  );\n\n  if (response.status !== 200) {\n    throw new Error(\"Channel not found\");\n  }\n  return response.json();\n}\n\nexport function getChannelName(\n  channel: Exclude<Channel, DMChannel | PartialDMChannel>\n) {\n  return channel.name || \"Unknown Channel\";\n}\n\nexport async function getChannelNameById(channelId: string) {\n  try {\n    const channel = await getChannelObject(channelId);\n    return getChannelName(channel);\n  } catch (error) {\n    return \"Unknown Channel\";\n  }\n}\n", "import strftime from \"strftime\";\nexport function convertUNIXToString(unixTimestamp: string, format?: string) {\n  const date_obj = new Date(Number(unixTimestamp));\n  return strftime(format || \"%B %d, %Y %I:%M %p\", date_obj);\n}\n", "import type { ProcessedTranscript, Transcript } from \"./db\";\nimport { convertUNIXToString } from \"./timestamp\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nexport async function generateInsightFromTranscript(\n  processedTranscripts: ProcessedTranscript[],\n  key: string,\n  sections: string[]\n) {\n  const configuration = new Configuration({\n    apiKey: key,\n  });\n  delete configuration.baseOptions.headers[\"User-Agent\"];\n\n  const openai = new OpenAIApi(configuration);\n\n  // const processedTranscripts = processTranscripts(transcripts);\n  processedTranscripts\n    .sort((a, b) => Number(a.timestamp) - Number(b.timestamp))\n    .forEach((transcript) => {\n      transcript.timestamp = convertUNIXToString(transcript.timestamp);\n      transcript.username = transcript.username.split(\"_\")[0];\n    });\n\n  try {\n    // 4 characters -> 1 token\n\n    const chunkedTranscripts: Array<ProcessedTranscript[]> = [[]];\n    let i = 0;\n    // 1000 tokens per request\n\n    let currentTokens = 0;\n    for (let j = 0; j < processedTranscripts.length; j += 1) {\n      if (\n        JSON.stringify(processedTranscripts[j]).length / 4 + currentTokens <=\n        1000\n      ) {\n        currentTokens += JSON.stringify(processedTranscripts[j]).length / 4;\n        chunkedTranscripts[i].push(processedTranscripts[j]);\n      } else {\n        i += 1;\n        chunkedTranscripts[i] = [];\n        currentTokens = 0;\n        j -= 1;\n      }\n    }\n\n    const res = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        {\n          role: \"user\",\n          content:\n            buildPrompt(sections) + JSON.stringify(chunkedTranscripts[0]),\n        },\n      ],\n      temperature: 0.1,\n      max_tokens: 1000,\n    });\n\n    // replace all <h1 id='S&B*'>\n    const searchRegExp = new RegExp(\"<h1 id='S&B*'>\", \"g\");\n    const replaceWith = \"<h1 className='font-bold text-xl'>\";\n    let styledText = res.data.choices[0].message!.content.replace(\n      searchRegExp,\n      replaceWith\n    );\n\n    if (chunkedTranscripts.length > 1) {\n      for (let i = 1; i < chunkedTranscripts.length; i += 1) {\n        const res = await openai.createChatCompletion({\n          model: \"gpt-3.5-turbo\",\n          messages: [\n            {\n              role: \"user\",\n              content: buildContinueInsightPrompt(\n                styledText,\n                chunkedTranscripts[i]\n              ),\n            },\n          ],\n          temperature: 0.1,\n          max_tokens: 1000,\n        });\n        styledText = res.data.choices[0].message!.content.replace(\n          searchRegExp,\n          replaceWith\n        );\n      }\n    }\n\n    return styledText;\n  } catch (err) {\n    throw err;\n  }\n}\n\n// export function getParticipants(transcripts: Transcript[]) {\n//   return new Set(\n//     transcripts.map((transcript) =>\n//       transcript.filename.split(\"-\")[1].split(\".\")[0].slice(0, -4)\n//     )\n//   );\n// }\n\nexport function processTranscripts(transcripts: Transcript[]) {\n  return transcripts.map((transcript) => ({\n    username: transcript.filename.split(\"-\")[1].split(\".\")[0],\n    timestamp: transcript.filename.split(\"-\")[0],\n    text: transcript.text,\n  }));\n}\n\nconst BASE_PROMPT =\n  \"Given the following transcript, please provide an insight into the meeting. And format your response with proper line-breaks in markdown format. Only have the following headers (do no include parenthesis) in the memo. Use bullet points and the username field provided in json whenever appropriate. Make all headers with ##. DO NOT MAKE UP ANYTHING ELSE \\n\\n\";\n\nconst CONTINUE_PROMPT =\n  \"Given the generated insight and additional transcripts, please modify, refine the content of each section of the generated insight accordingly. You must output the new insight with the same styling and headers. DO NOT MAKE UP ANYTHING ELSE \\n\\n\";\n\nfunction buildPrompt(sections: string[]) {\n  let prompt = BASE_PROMPT;\n  sections.forEach((section) => {\n    prompt += section + \"\\n\\n\";\n  });\n  prompt +=\n    \"\\n\\n\\n Now here's the transcript in JSON format [{username, timestamp, text}]\\n\\n\";\n\n  return prompt;\n}\n\nfunction buildContinueInsightPrompt(\n  generatedInsight: string,\n  transcripts: ProcessedTranscript[]\n) {\n  let prompt = CONTINUE_PROMPT;\n  prompt += \"\\n\\n\\n here's the existing insight\\n\\n\";\n  prompt += generatedInsight;\n  prompt +=\n    \"\\n\\n\\n Now here's the transcript in JSON format [{username, timestamp, text}]\\n\\n\";\n  prompt += JSON.stringify(transcripts);\n\n  return prompt;\n}\n", "import {\n  DocumentTextIcon,\n  QuestionMarkCircleIcon,\n  Cog6ToothIcon,\n  TrashIcon,\n  PlusIcon,\n} from \"@heroicons/react/24/solid\";\nimport { useState } from \"react\";\n\ntype TemplateBuilderProp = {\n  inputFields: string[];\n  setInputFields: (...args: any) => void;\n  preBuiltTemplates: Record<number, string[]>;\n};\n\nexport const TemplateBuilder: React.FC<TemplateBuilderProp> = ({\n  inputFields,\n  setInputFields,\n  preBuiltTemplates,\n}) => {\n  const [selectedTemplate, setSelectedTemplate] = useState(0);\n  //   const [inputFields, setInputFields] = useState<string[]>(\n  //     preBuiltTemplates[selectedTemplate]\n  //   );\n\n  return (\n    <div className=\"mt-2 ml-[-4]\">\n      <h1 className=\"text-md font-bold text-black\">Select a Template</h1>\n      <p className=\"text-sm text-gray-600\">\n        Select a template to generate insights from, or create your own by\n        entering section names. To have accurate result, please make sure to\n        have some description of the field in parenthesis.\n      </p>\n      {/* horizontal icons */}\n      <div className=\"w-full flex flex-row items-center justify-center mt-3 mx-auto\">\n        <div className=\"flex flex-col items-center justify-center mx-auto\">\n          <button\n            className={`hover:bg-yellow-400 text-white font-bold p-1 rounded-lg ${\n              selectedTemplate === 0\n                ? \"ring-1 ring-yellow-500 bg-yellow-400\"\n                : \"bg-gray-400\"\n            } `}\n            onClick={() => {\n              setSelectedTemplate(0);\n              setInputFields(preBuiltTemplates[0]);\n            }}\n          >\n            <DocumentTextIcon className=\"text-white stroke-2 h-10 w-10 p-1\" />\n          </button>\n          <p className=\"text-xs font-bold text-gray-600 mt-1\">Memo</p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center mx-auto\">\n          <button\n            className={` hover:bg-yellow-400 text-white font-bold p-1 rounded-lg ${\n              selectedTemplate === 1\n                ? \"ring-1 ring-yellow-500 bg-yellow-400\"\n                : \"bg-gray-400\"\n            } `}\n            onClick={() => {\n              setSelectedTemplate(1);\n              setInputFields(preBuiltTemplates[1]);\n            }}\n          >\n            <QuestionMarkCircleIcon className=\"text-white stroke-2 h-10 w-10 p-1\" />\n          </button>\n          <p className=\"text-xs font-bold text-gray-600 mt-1\">FAQ</p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center mx-auto\">\n          <button\n            className={` hover:bg-yellow-400 text-white font-bold p-1 rounded-lg ${\n              selectedTemplate === 2\n                ? \"ring-1 ring-yellow-500 bg-yellow-400\"\n                : \"bg-gray-400\"\n            } `}\n            onClick={() => {\n              setSelectedTemplate(2);\n              setInputFields([]);\n            }}\n          >\n            <Cog6ToothIcon className=\"text-white stroke-2 h-10 w-10 p-1\" />\n          </button>\n          <p className=\"text-xs font-bold text-gray-600 mt-1\">Custom</p>\n        </div>\n      </div>\n      {/* input fields */}\n      <div className=\"w-full mt-6 space-y-2 rounded-lg border border-gray-300 p-2\">\n        <ul className=\"max-h-[10rem]  overflow-auto\">\n          {inputFields.map((field, index) => (\n            <li\n              key={index}\n              className=\"flex items-center justify-between rounded-lg hover:bg-gray-100 p-2\"\n            >\n              <input\n                type=\"text\"\n                placeholder=\"Enter a section name. e.g., Critical Analysis\"\n                value={field}\n                className=\"text-sm font-bold text-gray-700 w-full\"\n                onChange={(e) => {\n                  const newValue = e.target.value;\n                  setInputFields(\n                    inputFields.map((item, i) =>\n                      i === index ? newValue : item\n                    )\n                  );\n                }}\n              />\n              <button\n                className=\"text-red-500\"\n                onClick={() => {\n                  setInputFields(inputFields.filter((_, i) => i !== index));\n                }}\n              >\n                <TrashIcon className=\"stroke-2 h-6 w-6 p-1\" />\n              </button>\n            </li>\n          ))}\n        </ul>\n        <button\n          className=\"w-full bg-sky-500 hover:bg-sky-600 text-white px-4 py-2 rounded-lg flex items-center justify-center disabled:bg-gray-400 disabled:hover:bg-gray-400\"\n          disabled={inputFields.some((item) => item === \"\" || item === null)}\n          onClick={() => {\n            setInputFields([...inputFields, \"\"]);\n          }}\n        >\n          <PlusIcon className=\"stroke-2 h-6 w-6 p-1\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport type { Meeting } from \"~/utils/db\";\n\ntype ParticipantsProp = {\n  meeting: Meeting | undefined;\n};\n\nexport const Participants: React.FC<ParticipantsProp> = ({ meeting }) => {\n  const [partcipants, setParticipants] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!meeting) return;\n\n    const fetchParticipants = async () => {\n      setLoading(true);\n      var data = new FormData();\n      data.append(\"requestType\", JSON.stringify(\"getParticipantsForMeeting\"));\n      data.append(\"guildId\", JSON.stringify(meeting.guildId));\n      data.append(\"channelId\", JSON.stringify(meeting.channelId));\n      data.append(\"meetingId\", JSON.stringify(meeting.id));\n\n      await fetch(`/api`, {\n        method: \"POST\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setParticipants(data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          console.log(e.message);\n          setLoading(false);\n        });\n    };\n\n    fetchParticipants();\n  }, [meeting!.id]);\n  return (\n    <>\n      <h1 className=\"text-xl font-bold\">Participants</h1>\n      <ul className=\"list-disc ml-5\">\n        {meeting === undefined ? (\n          <li>Failed to load meeting details.</li>\n        ) : (\n          <>\n            {loading ? (\n              <li>Loading...</li>\n            ) : (\n              <>\n                {partcipants.map((participant, id) => (\n                  <li key={id}>{participant.slice(0, -5)}</li>\n                ))}\n              </>\n            )}\n          </>\n        )}\n      </ul>\n    </>\n  );\n};\n", "export default function MeetingsIndex() {\n  return (\n    <div>\n      <h1>Pick a meeting</h1>\n    </div>\n  );\n}\n", "import {\n  useMeetingArrayEffect,\n  useRouteData,\n  useRouteParam,\n} from \"~/utils/hooks\";\nimport type { BasicGuildInfo, DashboardProps } from \"./dashboard\";\nimport { type LoaderFunction } from \"@remix-run/node\";\nimport type { Meeting } from \"~/utils/db\";\nimport { getMeetings } from \"~/utils/db\";\nimport { NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport { convertUNIXToString } from \"~/utils/timestamp\";\n\nimport MagicCubeAnimation from \"~/assets/lottie/magic-cube.gif\";\nimport * as NoMeetingAnimation from \"~/assets/lottie/no-meeting.json\";\nimport { useLottie } from \"lottie-react\";\nimport { SelectedMeetingContext } from \"~/context/selectedMeetingContext\";\nimport type { SelectedMeetingContextType } from \"~/@types/selectedMeeting\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const regexPattern = /\\/guilds\\/(\\d+)/;\n  const match = request.url.match(regexPattern);\n  const guildId = match ? match[1] : null;\n\n  return await getMeetings(\n    guildId || \"\",\n    process.env.S3_BUCKET_REGION!,\n    process.env.S3_BUCKET_NAME!\n  );\n};\n\nexport default function GuildPage() {\n  const meetings = useLoaderData<Meeting[]>();\n  const guilds = useRouteData<DashboardProps>(\"routes/dashboard\")?.guilds || [];\n  const guildId = useRouteParam<string>(\"routes/dashboard\", \"guild\");\n\n  useMeetingArrayEffect(() => {}, meetings);\n\n  const {\n    selectedCardId,\n    setSelectedCardId,\n    selectedMeetingId,\n    setSelectedMeetingId,\n  } = useContext(SelectedMeetingContext) as SelectedMeetingContextType;\n\n  const guild = guilds.find((guild) => guild.id === guildId);\n\n  const meetings_grouped_by_date = meetings.reduce((acc, meeting) => {\n    const date = convertUNIXToString(meeting.id, \"%B %d, %Y\");\n\n    if (!acc[date]) {\n      acc[date] = [];\n    }\n\n    acc[date].push(meeting);\n\n    return acc;\n  }, {} as Record<string, Meeting[]>);\n\n  const sorted_meetings = Object.keys(meetings_grouped_by_date).sort((a, b) => {\n    return Date.parse(b) - Date.parse(a);\n  });\n\n  return (\n    <>\n      {guild && guild.hasHearHearBot ? (\n        <>\n          {sorted_meetings.length === 0 ? (\n            <>\n              <NoMeetingPage />\n            </>\n          ) : (\n            <>\n              <div className=\"flex\">\n                <div className=\"flex-auto max-w-md border-r-2 border-gray-200 p-10 min-h-screen\">\n                  <h1 className=\"text-3xl font-bold\">Meetings</h1>\n                  <div className=\"mt-10\">\n                    <ul>\n                      {sorted_meetings.map((date, id) => {\n                        const gradient =\n                          selectedCardId === id\n                            ? \"bg-gradient-to-b from-green-400 to-blue-500\"\n                            : \"\";\n                        return (\n                          <li\n                            key={date}\n                            className=\"flex-col flex items-center justify-center mb-5\"\n                          >\n                            <div\n                              className={`bg-slate-100 rounded-lg shadow-lg p-4 cursor-pointer ${\n                                selectedCardId === id\n                                  ? `min-h-[7rem] text-white ${gradient}`\n                                  : \"border-solid border-gray-100 border-2\"\n                              } min-w-full`}\n                              onClick={() =>\n                                setSelectedCardId(\n                                  selectedCardId === id ? -1 : id\n                                )\n                              }\n                            >\n                              {selectedCardId !== id && (\n                                <div className=\"flex items-center justify-between\">\n                                  <div className=\"font-semibold\">{date}</div>\n                                </div>\n                              )}\n                            </div>\n\n                            {selectedCardId === id && (\n                              // TIMETABLE SECTION\n                              <div\n                                className=\"mt-[-3rem] backdrop-blur-sm\n                          bg-white/30 p-4 w-[90%] shadow-lg \n                          rounded-lg border-solid border-gray-50 border-1\"\n                              >\n                                <div className=\"flex flex-col space-y-4\">\n                                  <div className=\"font-semibold mb-5\">\n                                    {date}\n                                  </div>\n                                  {meetings_grouped_by_date[date]\n                                    .sort(\n                                      (a: Meeting, b: Meeting) =>\n                                        Number(b.id) - Number(a.id)\n                                    )\n                                    .map((meeting: Meeting) => (\n                                      <div\n                                        key={meeting.id}\n                                        className=\"flex items-center\"\n                                      >\n                                        <div className=\"h-2 w-2 rounded-full bg-gray-500\"></div>\n                                        <NavLink\n                                          prefetch=\"intent\"\n                                          to={`/dashboard/guilds/${guildId}/meetings/${meeting.channelId}-${meeting.id}`}\n                                          className=\"flex items-center justify-between w-full\"\n                                          onClick={() =>\n                                            setSelectedMeetingId(meeting.id)\n                                          }\n                                        >\n                                          <div\n                                            className={`ml-4 bg-white shadow-md w-full\n                                   p-3 rounded-lg hover:bg-gray-100 ${\n                                     selectedMeetingId === meeting.id\n                                       ? \"border-solid border-green-500 border-2\"\n                                       : \"\"\n                                   } `}\n                                          >\n                                            <div>{meeting.channelName}</div>\n                                            <div className=\"text-gray-500\">\n                                              {convertUNIXToString(\n                                                meeting.startTime,\n                                                \"%I:%M %p\"\n                                              )}{\" \"}\n                                              -{\" \"}\n                                              {convertUNIXToString(\n                                                meeting.endTime,\n                                                \"%I:%M %p\"\n                                              )}\n                                            </div>\n                                          </div>\n                                        </NavLink>\n                                      </div>\n                                    ))}\n                                </div>\n                              </div>\n                            )}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                </div>\n\n                <div className=\"flex-auto max-h-screen w-1/3 overflow-auto\">\n                  <Outlet />\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          {guild ? (\n            <MagicBotInvite guild={guild} />\n          ) : (\n            <div className=\"flex flex-col items-center h-full\">\n              <h1 className=\"text-3xl font-bold mb-0 mt-10\">\n                something went wrong when getting server info.\n              </h1>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction NoMeetingPage() {\n  const options = {\n    animationData: NoMeetingAnimation,\n    loop: true,\n  };\n\n  const { View } = useLottie(options);\n\n  return (\n    <>\n      <div className=\"flex flex-col items-center h-full\">\n        <div className=\"w-96 h-96\">{View}</div>\n        <h1 className=\"text-3xl font-bold mb-0 mt-10\">nothing yet...</h1>\n        <p className=\"text-gray-500 text-sm mt-5\">\n          try schedule some meetings with the HearHear bot... or take a nap\n        </p>\n      </div>\n    </>\n  );\n}\n\nfunction MagicBotInvite({ guild }: { guild: BasicGuildInfo }) {\n  return (\n    <>\n      <div className=\"flex flex-col items-center h-full\">\n        <img\n          src={MagicCubeAnimation}\n          alt=\"Magic Cube\"\n          className=\"w-96 h-96 mt-10\"\n        />\n        <h1 className=\"text-3xl font-bold mb-0 mt-[-2.5rem]\">\n          let the magic happen\n        </h1>\n        <button\n          className=\"bg-black hover:bg-gray-800 text-white font-bold py-2 px-4 rounded mt-5\"\n          onClick={() => {\n            window.open(\n              `https://discord.com/api/oauth2/authorize?client_id=1094729151514161204&permissions=380139210752&scope=applications.commands%20bot&guild_id=${guild.id}`,\n              \"popup\",\n              \"width=600,height=600\"\n            );\n          }}\n        >\n          \u2728 Invite HearHear Bot \u2728\n        </button>\n        <p className=\"text-gray-500 text-sm mt-5\">\n          refresh this page after you've added the bot\n        </p>\n      </div>\n    </>\n  );\n}\n", "import type { FC } from \"react\";\nimport { createContext, useState } from \"react\";\nimport type { SelectedMeetingContextType } from \"~/@types/selectedMeeting\";\n\nexport const SelectedMeetingContext =\n  createContext<SelectedMeetingContextType | null>(null);\n\ninterface Props {\n  children: React.ReactNode;\n}\nconst SelectedMeetingProvider: FC<Props> = ({ children }) => {\n  const [selectedMeetingId, setSelectedMeetingId] = useState<\n    string | undefined\n  >(undefined);\n  const [selectedCardId, setSelectedCardId] = useState(0);\n\n  //   const setSelectedMeeting = (meetingId: string | undefined) => {\n  //     setSelectedMeetingId(meetingId);\n  //   };\n\n  //   const setSelectedCard = (cardId: number) => {\n  //     setSelectedCardId(cardId);\n  //   };\n\n  return (\n    <SelectedMeetingContext.Provider\n      value={{\n        selectedMeetingId,\n        selectedCardId,\n        setSelectedMeetingId,\n        setSelectedCardId,\n      }}\n    >\n      {children}\n    </SelectedMeetingContext.Provider>\n  );\n};\n\nexport default SelectedMeetingProvider;\n", "import { redirect } from \"@remix-run/node\";\n\nexport function loader() {\n  return redirect(\"/dashboard\");\n}\n\nexport default function Index() {\n  return (\n    <div>\n      <h1>Guild</h1>\n      <p>\n        You are not supposed to see this one. If you are seeing this, congrats!\n        You've broke my code.\n      </p>\n    </div>\n  );\n}\n", "import {\n  json,\n  type ActionFunction,\n  type LoaderFunction,\n  Response,\n} from \"@remix-run/node\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport type { Transcript } from \"~/utils/db\";\nimport { downloadRecordingsAsZip, getTranscripts } from \"~/utils/db\";\nimport { convertUNIXToString } from \"~/utils/timestamp\";\nimport { SpeakerWaveIcon } from \"@heroicons/react/24/solid\";\nimport { auth } from \"~/auth.server\";\nimport { saveAs } from \"file-saver\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const match = request.url.split(\"/\").pop()!.split(\"-\");\n\n  const guildId = match[0];\n  const channelId = match[1];\n  const meetingId = match[2];\n\n  const user = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  // check if user's guild has guildId\n  const userGuildIds = user.guilds ? user.guilds.map((guild) => guild.id) : [];\n  if (!userGuildIds.includes(guildId)) {\n    return \"Unauthorized\";\n  }\n\n  const transcripts = await getTranscripts(\n    guildId,\n    channelId,\n    meetingId,\n    process.env.S3_BUCKET_REGION!,\n    process.env.S3_BUCKET_NAME!,\n    process.env.AWS_ACCESS_KEY_ID!,\n    process.env.AWS_SECRET_ACCESS_KEY!\n  );\n\n  return {\n    transcripts,\n    guildId,\n    channelId,\n    meetingId,\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const match = request.url.split(\"/\").pop()!.split(\"-\");\n\n  const data = await request.formData();\n  const requestType = JSON.parse(data.get(\"requestType\")?.toString() || \"\");\n  const guildId = match[0];\n  const channelId = match[1];\n  const meetingId = match[2];\n\n  await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  const res = await fetch(`https://worker.xipu-li5458.workers.dev/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({\n      requestType,\n      guildId,\n      channelId,\n      meetingId,\n    }),\n  });\n\n  const json = await res.json();\n  console.log(json);\n\n  return new Response(JSON.stringify(json), {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nexport default function TranscriptPage() {\n  const authorization = useLoaderData<string | null>();\n  const { transcripts, guildId, channelId, meetingId } = useLoaderData<{\n    transcripts: Array<Transcript>;\n    guildId: string;\n    channelId: string;\n    meetingId: string;\n  }>();\n  const [currentTranscriptId, setCurrentTranscriptId] = useState<number | null>(\n    null\n  );\n\n  const [downloadingRecordings, setDownloadingRecordings] = useState(false);\n\n  if (authorization === \"Unauthorized\") {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-screen\">\n        <h1 className=\"text-3xl font-bold\">\n          You do not have permission to view this page.\n        </h1>\n      </div>\n    );\n  }\n\n  if (transcripts === null) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-screen\">\n        <h1 className=\"text-3xl font-bold\">No transcripts found</h1>\n      </div>\n    );\n  }\n  async function handleDownload() {\n    setDownloadingRecordings(true);\n\n    let formData = new FormData();\n    formData.append(\"requestType\", JSON.stringify(\"getTranscriptForMeeting\"));\n\n    await fetch(`/transcript/${guildId}-${channelId}-${meetingId}`, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // const body = await res.body?.getReader().read();\n    // if (body === undefined || body.value === undefined) {\n    //   setDownloadingRecordings(false);\n    //   return;\n    // }\n\n    // const blob = new Blob([body.value], { type: \"application/zip\" });\n    // console.log(blob);\n\n    // saveAs(blob, `${meetingId}.zip`);\n\n    setDownloadingRecordings(false);\n  }\n\n  return (\n    <div className=\"mt-5 p-5 mx-auto\">\n      {/* <button\n        className={`bg-black hover:bg-gray-800 text-white font-bold py-4 px-4 rounded mt-5 border-white border-2 ${\n          downloadingRecordings && \"opacity-50 cursor-not-allowed\"\n        }`}\n        disabled={downloadingRecordings}\n        onClick={handleDownload}\n      >\n        {downloadingRecordings ? \"Downloading\" : \"Download Recordings\"}\n      </button> */}\n      {transcripts\n        .sort(\n          (a, b) =>\n            Number(a.filename.split(\"-\")[0]) - Number(b.filename.split(\"-\")[0])\n        )\n        .map((transcript, id) => (\n          <div key={id} className=\"border-b py-4\">\n            {/* Render audio player */}\n            {/* {currentAudio === transcript.audio_link && (\n              <audio\n                className=\"hidden\"\n                autoPlay\n                controls={false}\n                onEnded={() => setCurrentAudio(\"\")}\n                src={transcript.audio_link}\n              ></audio>\n            )} */}\n            <h2 className=\"text-xl font-semibold mb-0 flex items-center\">\n              {transcript.filename.split(\"-\")[1].slice(0, -4)} -{\" \"}\n              {convertUNIXToString(\n                transcript.filename.split(\"-\")[0]!,\n                \"%I:%M:%S %p\"\n              )}\n              {currentTranscriptId === id && (\n                <span className=\"ml-3\">\n                  <SpeakerWaveIcon className=\"text-gray-500 stroke-2 h-5 w-5\" />\n                </span>\n              )}\n            </h2>\n            {/* Add onClick event handler to transcript text */}\n            <div\n              // className=\"p-4 mb-5 text-gray-600 text-lg cursor-pointer hover:border-gray-200 hover:border hover:rounded-lg hover:shadow-lg\"\n              className=\"p-4 mb-5 text-gray-600 text-lg\"\n              // onClick={() => handleClick(transcript, id)}\n            >\n              {transcript.text}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n}\n", "// app/routes/auth/discord.callback.tsx\nimport { type LoaderFunction } from \"@remix-run/node\";\nimport { auth } from \"../auth.server\";\n\nexport let loader: LoaderFunction = ({ request }) => {\n  return auth.authenticate(\"discord\", request, {\n    successRedirect: \"/dashboard\",\n    failureRedirect: \"/login\",\n  });\n};\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { auth } from \"~/auth.server\";\n\nexport let loader: LoaderFunction = () => redirect(\"/\");\nexport let action: ActionFunction = ({ request }) => {\n  return auth.logout(request, {\n    redirectTo: \"/\",\n  });\n};\n", "import { redirect } from \"@remix-run/node\";\n\nexport function loader() {\n  return redirect(\"/dashboard\");\n}\n\nexport default function Index() {\n  return (\n    <div>\n      <h1>Guild</h1>\n      <p>\n        You are not supposed to see this one. If you are seeing this, congrats!\n        You've broke my code.\n      </p>\n    </div>\n  );\n}\n", "import * as noServerSelectedAnimation from \"~/assets/lottie/no-server-selected.json\";\nimport { useLottie } from \"lottie-react\";\nimport { useRouteData } from \"~/utils/hooks\";\nimport type { DashboardProps } from \"./dashboard\";\n\nexport default function DashboardIndex() {\n  const guilds = useRouteData<DashboardProps>(\"routes/dashboard\")?.guilds;\n\n  const options = {\n    animationData: noServerSelectedAnimation,\n    loop: true,\n  };\n\n  const guilds_with_bots =\n    guilds?.filter((guild) => guild.hasHearHearBot) || [];\n\n  const { View } = useLottie(options);\n  return (\n    <>\n      <div className=\"flex flex-col items-center  h-full\">\n        <div className=\"w-96 h-96\">{View}</div>\n        <h1 className=\"text-3xl font-bold mb-0\">nothing to see here...</h1>\n        <StackedAvatar\n          size={50}\n          avatars={guilds_with_bots.map((guild) => `${guild.id}/${guild.icon}`)}\n        />\n\n        <p className=\"text-gray-500 text-center\">\n          You have {guilds_with_bots.length} servers with HearHear installed.\n          Select one to get started!\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport function StackedAvatar({\n  size,\n  avatars,\n}: {\n  size: number;\n  avatars: string[];\n}) {\n  const style = {\n    border: \"4px solid white\",\n    marginLeft: -(size / 2) + \"px\",\n  };\n\n  return (\n    <div style={{ marginLeft: size / 2 }}>\n      {avatars.map((avatar, idx) => (\n        <img\n          key={idx}\n          src={\n            avatar === null\n              ? \"https://cdn.discordapp.com/embed/avatars/0.png\"\n              : `https://cdn.discordapp.com/icons/${avatar}`\n          }\n          alt=\"discord server icon\"\n          className=\"w-12 h-12 rounded-full object-cover mb-0 inline-block\"\n          style={style}\n        />\n      ))}\n    </div>\n  );\n}\n", "// app/routes/auth/discord.tsx\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { auth } from \"~/auth.server\";\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n  return redirect(\"/dashboard\");\n};\n\nexport let action: ActionFunction = ({ request }) => {\n  return auth.authenticate(\"discord\", request);\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\nimport {\n  Form,\n  NavLink,\n  Outlet,\n  useLoaderData,\n  useNavigation,\n  type V2_MetaFunction,\n} from \"@remix-run/react\";\nimport { auth } from \"~/auth.server\";\nimport { config } from \"dotenv\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport { useRouteParam } from \"~/utils/hooks\";\nimport { useEffect, useState } from \"react\";\nimport HowToUseBOT from \"~/components/faq\";\nimport SelectedMeetingProvider from \"~/context/selectedMeetingContext\";\nimport { ArrowRightOnRectangleIcon } from \"@heroicons/react/24/outline\";\nimport { Crisp } from \"crisp-sdk-web\";\nimport { createSupabaseClient } from \"~/utils/supabase\";\n\nexport interface BasicGuildInfo {\n  id: string;\n  name: string;\n  icon: string;\n  owner: boolean;\n  hasHearHearBot: boolean;\n}\n\nexport interface DashboardProps {\n  user: DiscordUser;\n  guilds: Array<BasicGuildInfo>;\n}\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  const user = await auth.isAuthenticated(request, {\n    failureRedirect: \"/new\",\n  });\n  config();\n\n  const supabase = await createSupabaseClient(process.env.SUPABASE_KEY || \"\");\n  await supabase.loginUser(user);\n\n  const hearHearBotId = process.env.DISCORD_CLIENT_ID || \"\";\n  const hearHearBotToken = process.env.DISCORD_BOT_TOKEN || \"\";\n\n  const guilds = await Promise.all(\n    getUserGuilds(user).map(async (guild: any) => ({\n      ...guild,\n      hasHearHearBot: await botIsInGuild(\n        guild,\n        hearHearBotId,\n        hearHearBotToken\n      ),\n    }))\n  );\n\n  return { user, guilds };\n};\n\nexport const meta: V2_MetaFunction = ({ data }: { data: DashboardProps }) => {\n  return [{ title: `Dashboard - ${data.user.displayName} - HearHear` }];\n};\n\nexport default function DashboardLayout() {\n  const [selectedGuild, setSelectedGuild] = useState<string | undefined>(\n    undefined\n  );\n  const { user, guilds } = useLoaderData<DashboardProps>();\n  const navigation = useNavigation();\n\n  const guildId = useRouteParam<string>(\"routes/dashboard\", \"guild\");\n\n  if (guildId !== undefined && selectedGuild === undefined) {\n    setSelectedGuild(guildId);\n  }\n\n  const handleClick = (guildId: string) => {\n    setSelectedGuild(guildId);\n  };\n\n  return (\n    <>\n      {/* <div className=\"bg-yellow-700 text-white p-2 text-center\">\n        <p>\n          <span className=\"font-bold\">Status:</span> We are currently\n          experiencing issues with AWS. You can still access transcripts but\n          won't be able to generate insights until the issue is resolved.\n        </p>\n        <p>Thank you for your patience. </p>\n      </div> */}\n      <div className=\"flex bg-gray-50 overflow-hidden min-h-screen\">\n        <nav className=\"w-64 bg-slate-100 border-r border-gray-200 h-screen flex flex-col\">\n          <div className=\"px-6 pt-8\">\n            <h1 className=\"text-xl font-bold mb-4\">Dashboard</h1>\n            <h2 className=\"text-sm text-gray-600 mb-4\">\n              Welcome {user.displayName}#{user.discriminator}\n            </h2>\n            <h2 className=\"text-md font-bold\">Your Servers</h2>\n          </div>\n          <ul className=\"flex-grow text-sm text-gray-600 w-full\">\n            {guilds.map((guild: BasicGuildInfo) => (\n              <NavLink\n                prefetch=\"intent\"\n                to={`/dashboard/guilds/${guild.id}`}\n                key={guild.id}\n                onClick={() => handleClick(guild.id)}\n              >\n                <li\n                  key={guild.id}\n                  className={`flex items-center py-2 hover:bg-gray-200 ${\n                    selectedGuild === guild.id ? \"bg-gray-200\" : \"\"\n                  }`}\n                >\n                  {guild.icon === null ? (\n                    <img\n                      src=\"https://cdn.discordapp.com/embed/avatars/0.png\"\n                      alt={guild.name}\n                      className=\" ml-6 w-8 h-8 rounded-full mr-1\"\n                    />\n                  ) : (\n                    <img\n                      src={`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png`}\n                      alt={guild.name}\n                      className=\" ml-6 w-8 h-8 rounded-full mr-1\"\n                    />\n                  )}\n\n                  <span className=\"text-gray-700\">{guild.name}</span>\n                </li>\n              </NavLink>\n            ))}\n          </ul>\n\n          <footer className=\"h-[3rem] flex items-center \">\n            <HowToUseBOT />\n          </footer>\n          <footer className=\"h-[3rem] flex items-center mb-10 \">\n            <p\n              className=\"text-gray-500 text-md mx-6 cursor-pointer\"\n              onClick={() =>\n                window.open(\"https://discord.gg/mt2JMftH2r\", \"_blank\")\n              }\n            >\n              \u26A1 Instant Support\n            </p>\n          </footer>\n\n          <footer className=\"h-[4rem] bg-slate-800 flex justify-center items-center\">\n            <img\n              src={`https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`}\n              alt={user.displayName}\n              className=\"w-10 h-10 rounded-full mx-1\"\n            />\n\n            <div className=\"flex flex-col ml-1\">\n              <span className=\"text-gray-100 font-medium text-sm\">\n                {user.displayName}\n              </span>\n              <span className=\"text-gray-400 text-sm\">\n                #{user.discriminator}\n              </span>\n            </div>\n\n            <Form action=\"/auth/discord/logout\" method=\"post\">\n              <button className=\"bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-2 rounded-full ml-8 mr-1\">\n                <ArrowRightOnRectangleIcon className=\"w-6 h-6 text-black stroke-2\" />\n              </button>\n            </Form>\n          </footer>\n        </nav>\n        <SelectedMeetingProvider>\n          <div className=\"flex-1 max-h-screen overflow-auto\">\n            {navigation.state === \"loading\" &&\n            navigation.location.pathname.match(/^\\/dashboard\\/guilds\\/\\d+$/) !==\n              null ? (\n              <Skeleton />\n            ) : (\n              <Outlet />\n            )}\n          </div>\n        </SelectedMeetingProvider>\n      </div>\n      <CrispChat />\n    </>\n  );\n}\n\nfunction getUserGuilds(user: any) {\n  return user.guilds ? user.guilds.map((guild: any) => guild) : [];\n}\n\nasync function botIsInGuild(\n  guild: any,\n  hearHearBotId: string,\n  hearHearBotToken: string\n) {\n  const hearHearBot = await fetch(\n    `https://discord.com/api/guilds/${guild.id}/members/${hearHearBotId}`,\n    {\n      headers: {\n        Authorization: `Bot ${hearHearBotToken}`,\n      },\n    }\n  );\n\n  return hearHearBot.status === 200;\n}\n\nfunction Skeleton() {\n  return (\n    <div className=\"flex\">\n      <div className=\"flex-auto max-w-md border-r-2 border-gray-200 p-10 min-h-screen\">\n        <h1 className=\"text-3xl font-bold animate-pulse\">Meetings</h1>\n        <div className=\"mt-10\">\n          <ul>\n            {[1, 2, 3].map((_, id) => {\n              return (\n                <li\n                  key={id}\n                  className=\"flex-col flex items-center justify-center mb-5\"\n                >\n                  <div className=\"bg-slate-100 rounded-lg shadow-lg p-4 min-h-[7rem] min-w-full animate-pulse\"></div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"flex-auto max-h-screen\">\n        <div className=\"animate-pulse min-h-screen\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction CrispChat() {\n  useEffect(() => {\n    Crisp.configure(\"5e3e4cdc-0b90-497d-b632-ef9df4a5786e\");\n  }, []);\n\n  return null;\n}\n", "import { Fragment, useRef, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { CodeBracketIcon } from \"@heroicons/react/24/outline\";\n\nexport default function HowToUseBOT() {\n  const [open, setOpen] = useState(false);\n\n  const cancelButtonRef = useRef(null);\n\n  return (\n    <>\n      <p\n        className=\"text-gray-500 text-md mx-6 cursor-pointer\"\n        onClick={() => setOpen(true)}\n      >\n        How to use the bot?\n      </p>\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"relative z-10\"\n          initialFocus={cancelButtonRef}\n          onClose={setOpen}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n            <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              >\n                <Dialog.Panel className=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\">\n                  <div className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4\">\n                    <div className=\"sm:flex sm:items-start\">\n                      <div className=\"mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-slate-900 sm:mx-0 sm:h-10 sm:w-10\">\n                        <CodeBracketIcon\n                          className=\"h-6 w-6 text-white\"\n                          aria-hidden=\"true\"\n                        />\n                      </div>\n                      <div className=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\">\n                        <Dialog.Title\n                          as=\"h1\"\n                          className=\"text-xl font-bold leading-6 text-gray-900\"\n                        >\n                          HearHear Bot Commands\n                        </Dialog.Title>\n                        <div className=\"mt-5\">\n                          <p className=\"text-sm text-gray-800 mt-3\">\n                            The following commands can be used in any text\n                            channels that the bot has access to.\n                          </p>\n\n                          <p className=\"text-sm text-gray-500 my-5\">\n                            <code className=\"text-sm text-gray-800 px-3 py-[0.2rem] border border-gray-200 rounded-md\">\n                              /start\n                            </code>{\" \"}\n                            When you are in a voice channel, use this command to\n                            invite the bot to your channel and immediately start\n                            recordings.\n                          </p>\n                          <p className=\"text-sm text-gray-500 mb-5\">\n                            <code className=\"text-sm text-gray-800 px-3 py-[0.2rem] border border-gray-200 rounded-md\">\n                              /end\n                            </code>{\" \"}\n                            Use this command to make the bot leave the voice\n                            channel and the bot will process the recordings.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto\"\n                      onClick={() => setOpen(false)}\n                    >\n                      Deactivate\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto\"\n                      onClick={() => setOpen(false)}\n                      ref={cancelButtonRef}\n                    >\n                      Cancel\n                    </button>\n                  </div> */}\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n    </>\n  );\n}\n", "import type { V2_MetaFunction } from \"@remix-run/react\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `Privacy Policy` }];\n};\n\nexport default function PrivacyPolicyPage() {\n  return (\n    <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\n      <h1 className=\"text-3xl font-extrabold text-gray-900 mb-6\">\n        Privacy Policy\n      </h1>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Your privacy is important to us. It is HearHear's policy to respect your\n        privacy regarding any information we may collect from you across our\n        website, and other sites we own and operate.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        We only ask for personal information when we truly need it to provide a\n        service to you. We collect it by fair and lawful means, with your\n        knowledge and consent. We also let you know why we're collecting it and\n        how it will be used.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        We only retain collected information for as long as necessary to provide\n        you with your requested service. What data we store, we'll protect\n        within commercially acceptable means to prevent loss and theft, as well\n        as unauthorized access, disclosure, copying, use or modification.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        We don't share any personally identifying information publicly or with\n        third-parties, except when required to by law.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Our website may link to external sites that are not operated by us.\n        Please be aware that we have no control over the content and practices\n        of these sites, and cannot accept responsibility or liability for their\n        respective privacy policies.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        You are free to refuse our request for your personal information, with\n        the understanding that we may be unable to provide you with some of your\n        desired services.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Your continued use of our website will be regarded as acceptance of our\n        practices around privacy and personal information. If you have any\n        questions about how we handle user data and personal information, feel\n        free to contact us.\n      </p>\n      <p className=\"text-gray-700 leading-7\">\n        This policy is effective as of 20 April, 2023.\n      </p>\n    </div>\n  );\n}\n", "import { type V2_MetaFunction } from \"@remix-run/react\";\nimport NavBar from \"~/components/nav\";\nimport LandingPage from \"~/components/landing\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: \"HearHear | 10x your daily meetings\" }];\n};\n\nexport default function Index() {\n  return (\n    <>\n      <NavBar />\n      <div className=\"\">\n        <div className=\"\">\n          <main>\n            <LandingPage />\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport { useRouteData } from \"~/utils/hooks\";\nimport logo from \"~/assets/logo.svg\";\n\nexport default function NavBar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const user = useRouteData<{ user: DiscordUser | undefined }>(\"root\")?.user;\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-6\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0 flex items-center\">\n              <img className=\"h-10 w-auto\" src={logo} alt=\"Workflow\" />\n              <h1 className=\"text-2xl font-bold text-gray-900 ml-2\">\n                HearHear\n              </h1>\n            </div>\n          </div>\n          <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n            {/* on clicking the image, show logout button */}\n\n            {user && (\n              <>\n                <button\n                  className=\"text-gray-500 hover:text-gray-700 px-3 py-2 rounded-md text-sm font-medium\"\n                  onClick={() => setIsOpen(!isOpen)}\n                >\n                  {user.avatar === null ? (\n                    <img\n                      src=\"https://cdn.discordapp.com/embed/avatars/0.png\"\n                      alt=\"user icon\"\n                      className=\"w-10 h-10 rounded-full object-cover mb-0 hover:opacity-80\"\n                    />\n                  ) : (\n                    <img\n                      src={`https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`}\n                      alt=\"user avatar\"\n                      className=\"w-10 h-10 rounded-full object-cover mb-0 hover:opacity-80\"\n                    />\n                  )}\n                </button>\n\n                <Form action=\"/auth/discord/logout\" method=\"post\">\n                  <button className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full\">\n                    Logout\n                  </button>\n                </Form>\n              </>\n            )}\n          </div>\n          <div className=\"-mr-2 flex items-center sm:hidden\">\n            {/* Mobile menu button */}\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              type=\"button\"\n              className=\"bg-white inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n              aria-expanded=\"false\"\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              {/* Icon when menu is closed. */}\n              <svg\n                className={`${isOpen ? \"hidden\" : \"block\"} h-6 w-6`}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M4 6h16M4 12h16M4 18h16\"\n                />\n              </svg>\n              {/* Icon when menu is open. */}\n              <svg\n                className={`${isOpen ? \"block\" : \"hidden\"} h-6 w-6`}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile menu, show/hide based on menu state. */}\n      <div className={`${isOpen ? \"block\" : \"hidden\"} sm:hidden`}>\n        <div className=\"pt-2 pb-4 space-y-1\">\n          {user && (\n            <button\n              className=\"text-gray-500 hover:text-gray-700 block px-3 py-2 rounded-md text-base font-medium\"\n              onClick={() => setIsOpen(false)}\n            >\n              Open Todos\n            </button>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n}\n", "// app/routes/login.tsx\nimport { Form } from \"@remix-run/react\";\nimport type { DiscordUser } from \"~/auth.server\";\nimport { Link } from \"react-router-dom\";\nimport { useRouteData } from \"~/utils/hooks\";\nimport { redirect, type LoaderFunction } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = ({ request }) => {\n  redirect(\"/\");\n};\nexport default function Login() {\n  const user = useRouteData<{ user: DiscordUser | undefined }>(\"root\")?.user;\n  // get the current url\n\n  if (!user) {\n    return (\n      <Form action=\"/auth/discord\" method=\"post\">\n        <button className=\"bg-black hover:bg-gray-800 text-white font-bold py-4 px-4 rounded mt-5 border-white border-2\">\n          \u2728 get started \u2728\n        </button>\n      </Form>\n    );\n  } else {\n    return (\n      <div className=\"\">\n        <p className=\"mt-4 text-gray-300\">\n          \uD83D\uDC4B Welcome back, {user.displayName}!\n        </p>\n        <Link to=\"/dashboard\">\n          <button className=\"bg-black hover:bg-gray-800 text-white font-bold py-4 px-4 rounded mt-5 border-white border-2\">\n            go to my dashboard\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n", "import Login from \"~/routes/login\";\nimport Planets from \"~/assets/planets.png\";\n\nexport default function HeadLine() {\n  return (\n    <div className=\"bg-black pb-10\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col md:flex-row items-center\">\n        <div className=\"max-w-xl px-4 md:w-1/2 md:pr-10 py-6\">\n          <h1 className=\"text-4xl font-extrabold text-yellow-300 sm:text-5xl sm:tracking-tight lg:text-6xl\">\n            <span className=\"block\">\n              10x your daily <span className=\"block text-white\">meetings</span>\n            </span>\n          </h1>\n          <p className=\"mt-5 text-xl text-gray-400\">\n            Transform your meetings into actionable insights. With HearHear, say\n            goodbye to missed tasks and forgotten ideas.\n          </p>\n          <div className=\"mt-10\">\n            <Login />\n          </div>\n        </div>\n        <div className=\"hidden md:block md:w-1/2\">\n          <img src={Planets} alt=\"planets\" className=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport HearHearVid from \"~/assets/hearhear-demo.mp4\";\nimport StageIcon from \"~/assets/Stage-Icon.svg\";\nimport VoiceIcon from \"~/assets/Voice-Icon.svg\";\n\nexport default function HowHearHearWorks() {\n  return (\n    <div className=\"bg-gray-200 flex\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col sm:flex-col md:flex-col lg:flex-row items-center\">\n        <div className=\"max-w-xl sm:pr-10 mt-10\">\n          <video\n            autoPlay\n            muted\n            loop\n            id=\"myVideo\"\n            className=\"rounded-2xl shadow-2xl\"\n          >\n            <source src={HearHearVid} type=\"video/mp4\" />\n          </video>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900 sm:text-4xl sm:tracking-tight lg:text-5xl\">\n            How HearHear Works\n          </h2>\n          <div className=\"mt-5 space-y-6 text-sm text-gray-500 \">\n            <p className=\"border-green-700 border-2 rounded-lg p-1 max-w-fit bg-green-200 bg-opacity-90\">\n              Supported Channel Types:\n              <span>\n                <img\n                  src={VoiceIcon}\n                  className=\"inline-block h-5 w-5 ml-2\"\n                  alt=\"Voice Channel\"\n                />\n              </span>\n              <span>\n                <img\n                  src={StageIcon}\n                  className=\"inline-block h-5 w-5 ml-2\"\n                  alt=\"Stage Channel\"\n                />\n              </span>\n            </p>\n          </div>\n          <div className=\"max-w-xl\">\n            <div className=\"mt-10\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-yellow-300 text-black font-bold text-xl\">\n                    1\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-bold text-gray-900\">\n                    <span\n                      className=\"underline decoration-4 cursor-pointer\"\n                      onClick={() => {\n                        window.open(\n                          `https://discord.com/api/oauth2/authorize?client_id=1094729151514161204&permissions=380139210752&scope=applications.commands%20bot`,\n                          \"popup\",\n                          \"width=600,height=600\"\n                        );\n                      }}\n                    >\n                      Add the bot\n                    </span>{\" \"}\n                    to Your Server\n                  </h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Make sure you assign the right roles for the bot to join\n                    channels or stages that require permissions.\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-10 flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-yellow-300 text-black font-bold text-xl\">\n                    2\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-bold text-gray-900\">\n                    Start a Meeting\n                  </h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    When you're in a voice channel or stage, type{\" \"}\n                    <code className=\"text-black border-gray-500 border-2 rounded-md p-1\">\n                      /start\n                    </code>{\" \"}\n                    in any text channel. The bot will join the voice channel and\n                    start recording.\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-10 flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-yellow-300 text-black font-bold text-xl\">\n                    3\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-bold text-gray-900\">\n                    Finish the Meeting\n                  </h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    Type{\" \"}\n                    <code className=\"text-black border-gray-500 border-2 rounded-md p-1\">\n                      /end\n                    </code>{\" \"}\n                    in any text channel. The bot will leave the voice channel\n                    and process the recording. You can see the meeting details\n                    in the{\" \"}\n                    <Link to=\"/dashboard\" className=\"text-yellow-600\">\n                      dashboard\n                    </Link>\n                    .\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import InsightGenerationVideo from \"~/assets/insight-generation.mp4\";\n\nimport {\n  BoltIcon,\n  ShieldCheckIcon,\n  DocumentTextIcon,\n} from \"@heroicons/react/24/outline\";\n\nexport default function Features() {\n  return (\n    <div className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col sm:flex-col md:flex-col lg:flex-row items-center\">\n        <div className=\"max-w-full py-16 px-4 sm:py-24 sm:px-6\">\n          <div className=\"max-w-xl\">\n            <h2 className=\"text-3xl font-extrabold text-gray-900 sm:text-4xl sm:tracking-tight lg:text-5xl\">\n              Features\n            </h2>\n\n            <div className=\"mt-10 flex\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-sky-500 text-white\">\n                  <BoltIcon className=\"w-6 h-6\" />\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                  Generate Customized Insights\n                </h3>\n                <p className=\"mt-2 text-base text-gray-500\">\n                  HearHear can generate any insight based on the templates you\n                  built. Whether it's summary in haiku format, action items,\n                  vibe check, or tension analysis, sky is the limit.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"mt-10\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-sky-500 text-white\">\n                    <DocumentTextIcon className=\"w-6 h-6\" />\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Raw Transcript Access\n                  </h3>\n                  <p className=\"mt-2 text-base text-gray-500\">\n                    You can access the raw transcript with audio playback to\n                    triple-check. No more unaddressed misunderstandings.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-10 flex\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-sky-500 text-white\">\n                  <ShieldCheckIcon className=\"w-6 h-6\" />\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                  First Class Security\n                </h3>\n                <p className=\"mt-2 text-base text-gray-500\">\n                  HearHear is built with security in mind. We use industry\n                  standard security practices to ensure your data is safe.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hidden lg:block sm:px-0 lg:px-0 z-0\">\n          <div className=\"max-w-2xl mt-10\">\n            <video\n              autoPlay\n              muted\n              loop\n              id=\"myVideo\"\n              className=\"rounded-2xl shadow-2xl\"\n            >\n              <source src={InsightGenerationVideo} type=\"video/mp4\" />\n            </video>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "export default function Contact() {\n  return (\n    <div className=\"bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto py-10 px-4 sm:py-10 sm:px-6 lg:px-8\">\n        <div className=\"max-w-xl px-4 py-6 mx-auto lg:mx-0\">\n          <h2 className=\"text-3xl font-extrabold text-white sm:text-4xl sm:tracking-tight lg:text-5xl\">\n            Got a question?\n          </h2>\n          <p className=\"mt-5 text-xl text-gray-400\">\n            If you have any questions, feel free to reach out to me on Twitter.\n            I'm always happy to help!\n          </p>\n          <div className=\"mt-8 space-x-3\">\n            <a\n              href=\"https://twitter.com/theXipuLi\"\n              target=\"_blank\"\n              className=\"inline-block bg-sky-500 py-3 px-6 border border-transparent rounded-md font-medium text-white hover:bg-sky-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n              rel=\"noreferrer\"\n            >\n              Drop a dm\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 overflow-hidden sm:px-6 lg:px-8\">\n        <nav\n          className=\"-mx-5 -my-2 flex flex-wrap justify-center\"\n          aria-label=\"Footer\"\n        >\n          <div className=\"px-5 py-2\">\n            <Link\n              to=\"/privacy\"\n              className=\"text-base text-gray-500 hover:text-gray-900\"\n            >\n              Privacy Policy\n            </Link>\n          </div>\n          <div className=\"px-5 py-2\">\n            <Link\n              to=\"/terms\"\n              className=\"text-base text-gray-500 hover:text-gray-900\"\n            >\n              Terms and Conditions\n            </Link>\n          </div>\n        </nav>\n        <div className=\"mt-8\">\n          <p className=\"text-base text-gray-400 text-center\">\n            &copy; {new Date(Date.now()).getFullYear()} HearHear. All rights\n            reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n", "import HeadLine from \"./landing/headline\";\nimport HowHearHearWorks from \"./landing/how\";\nimport Features from \"./landing/features\";\nimport Contact from \"./landing/contact\";\nimport Footer from \"./landing/footer\";\n\nexport default function LandingPage() {\n  return (\n    <div className=\"bg-black\">\n      <HeadLine />\n      <HowHearHearWorks />\n      <Features />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n", "import type { V2_MetaFunction } from \"@remix-run/react\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `Terms and Conditions` }];\n};\n\nexport default function TermsAndConditionsPage() {\n  return (\n    <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\n      <h1 className=\"text-3xl font-extrabold text-gray-900 mb-6\">\n        Terms and Conditions\n      </h1>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Please read these terms and conditions carefully before using our\n        website operated by HearHear. Your access to and use of the website is\n        conditioned on your acceptance of and compliance with these terms. These\n        terms apply to all visitors, users, and others who access or use the\n        website.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Accounts</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        When you create an account with us, you must provide accurate, complete,\n        and up-to-date information. Failure to do so constitutes a breach of the\n        terms, which may result in immediate termination of your account on our\n        website.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        You are responsible for safeguarding the password that you use to access\n        the website and for any activities or actions under your password,\n        whether your password is with our website or a third-party service.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        You agree not to disclose your password to any third party. You must\n        notify us immediately upon becoming aware of any breach of security or\n        unauthorized use of your account.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\n        Intellectual Property\n      </h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        The website and its original content, features, and functionality are\n        owned by HearHear and are protected by international copyright,\n        trademark, patent, trade secret, and other intellectual property or\n        proprietary rights laws.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\n        Links To Other Web Sites\n      </h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Our website may contain links to third-party web sites or services that\n        are not owned or controlled by HearHear. We have no control over, and\n        assume no responsibility for, the content, privacy policies, or\n        practices of any third party web sites or services. You further\n        acknowledge and agree that HearHear shall not be responsible or liable,\n        directly or indirectly, for any damage or loss caused or alleged to be\n        caused by or in connection with use of or reliance on any such content,\n        goods or services available on or through any such web sites or\n        services.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\n        Termination and Suspension\n      </h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        We may terminate or suspend access to our website immediately, without\n        prior notice or liability, for any reason whatsoever, including without\n        limitation if you breach the terms. All provisions of the terms which by\n        their nature should survive termination shall survive termination,\n        including, without limitation, ownership provisions, warranty\n        disclaimers, indemnity and limitations of liability.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Indemnification</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        You agree to defend, indemnify and hold harmless HearHear and its\n        licensee and licensors, and their employees, contractors, agents,\n        officers and directors, from and against any and all claims, damages,\n        obligations, losses, liabilities, costs or debt, and expenses (including\n        but not limited to attorney's fees), resulting from or arising out of a)\n        your use and access of the website, by you or any person using your\n        account and password, or b) a breach of these terms.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">\n        Limitation Of Liability\n      </h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        In no event shall HearHear, nor its directors, employees, partners,\n        agents, suppliers, or affiliates, be liable for any indirect,\n        incidental, special, consequential or punitive damages, including\n        without limitation, loss of profits, data, use, goodwill, or other\n        intangible losses, resulting from (i) your access to or use of or\n        inability to access or use the website; (ii) any conduct or content of\n        any third party on the website; (iii) any content obtained from the\n        website; and (iv) unauthorized access, use or alteration of your\n        transmissions or content, whether based on warranty, contract, tort\n        (including negligence) or any other legal theory, whether or not we have\n        been informed of the possibility of such damage, and even if a remedy\n        set forth herein is found to have failed of its essential purpose.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Disclaimer</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Your use of the website is at your sole risk. The website is provided on\n        an \"AS IS\" and \"AS AVAILABLE\" basis. The website is provided without\n        warranties of any kind, whether express or implied, including, but not\n        limited to, implied warranties of merchantability, fitness for a\n        particular purpose, non-infringement or course of performance.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        HearHear its subsidiaries, affiliates, and its licensors do not warrant\n        that a) the website will function uninterrupted, secure or available at\n        any particular time or location; b) any errors or defects will be\n        corrected; c) the website is free of viruses or other harmful\n        components; or d) the results of using the website will meet your\n        requirements.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Governing Law</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        These terms shall be governed and construed in accordance with the laws\n        of the Netherlands, without regard to its conflict of law provisions.\n      </p>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        Our failure to enforce any right or provision of these terms will not be\n        considered a waiver of those rights. If any provision of these terms is\n        held to be invalid or unenforceable by a court, the remaining provisions\n        of these terms will remain in effect. These terms constitute the entire\n        agreement between us regarding our website, and supersede and replace\n        any prior agreements we might have between us regarding the website.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Changes</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        We reserve the right, at our sole discretion, to modify or replace these\n        terms at any time. If a revision is material we will try to provide at\n        least 30 days notice prior to any new terms taking effect. What\n        constitutes a material change will be determined at our sole discretion.\n      </p>\n      <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Contact Us</h2>\n      <p className=\"text-gray-700 mb-4 leading-7\">\n        If you have any questions about these terms, please contact us.\n      </p>\n    </div>\n  );\n}\n", "import { Response, type ActionFunction } from \"@remix-run/node\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const data = await request.formData();\n\n  const requestType = JSON.parse(data.get(\"requestType\")?.toString() || \"\");\n  const guildId = JSON.parse(data.get(\"guildId\")?.toString() || \"\");\n  const channelId = JSON.parse(data.get(\"channelId\")?.toString() || \"\");\n  const meetingId = JSON.parse(data.get(\"meetingId\")?.toString() || \"\");\n\n  const res = await fetch(`https://worker.xipu-li5458.workers.dev/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({\n      requestType,\n      guildId,\n      channelId,\n      meetingId,\n    }),\n  });\n\n  const json = await res.json();\n\n  return new Response(JSON.stringify(json), {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n", "import { Form } from \"@remix-run/react\";\n\nexport default function NewUser() {\n  return (\n    <div className=\"flex justify-center items-center flex-col\">\n      <h1 className=\"text-4xl font-extrabold sm:text-5xl sm:tracking-tight lg:text-6xl mx-10\">\n        <span className=\"block\">\n          Wow, seems like you are new here! If you have just recorded a meeting,\n          you can click \"get started\" below to visit the dashboard.\n        </span>\n      </h1>{\" \"}\n      <Form action=\"/auth/discord\" method=\"post\">\n        <button className=\"bg-black hover:bg-gray-800 text-white font-bold py-4 px-4 rounded mt-5 border-white border-2\">\n          \u2728 get started \u2728\n        </button>\n      </Form>\n    </div>\n  );\n}\n", "export default {'version':'0ac456ac','entry':{'module':'/build/entry.client-RZLXO7II.js','imports':['/build/_shared/chunk-NGO2Q4XM.js','/build/_shared/chunk-ARYQK22N.js','/build/_shared/chunk-AAZ33T2Z.js','/build/_shared/chunk-CUPSZOF3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4CJ2ZRGC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-2EQFCDVN.js','imports':['/build/_shared/chunk-ZLSDYXKO.js','/build/_shared/chunk-MY5QWXBO.js','/build/_shared/chunk-C7F7NDP2.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api':{'id':'routes/api','parentId':'root','path':'api','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api-DALEO65J.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.discord':{'id':'routes/auth.discord','parentId':'root','path':'auth/discord','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.discord-WJGD4PRN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.discord.callback':{'id':'routes/auth.discord.callback','parentId':'routes/auth.discord','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.discord.callback-ZZWGIKQB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.discord.logout':{'id':'routes/auth.discord.logout','parentId':'routes/auth.discord','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.discord.logout-KTH4CROK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-EASJ2ROY.js','imports':['/build/_shared/chunk-INZJGYT5.js','/build/_shared/chunk-GWAJ7UPQ.js','/build/_shared/chunk-MY5QWXBO.js','/build/_shared/chunk-LPMMDFSI.js','/build/_shared/chunk-C7F7NDP2.js','/build/_shared/chunk-W5IRXHEL.js','/build/_shared/chunk-RO5ECSHB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard._index':{'id':'routes/dashboard._index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard._index-XSPUXDAP.js','imports':['/build/_shared/chunk-6ZRK7WQ7.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard.guilds.$guild':{'id':'routes/dashboard.guilds.$guild','parentId':'routes/dashboard','path':'guilds/:guild','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard.guilds.$guild-NV57V2IJ.js','imports':['/build/_shared/chunk-2H2LLXPL.js','/build/_shared/chunk-6ZRK7WQ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard.guilds.$guild.meetings.$meeting':{'id':'routes/dashboard.guilds.$guild.meetings.$meeting','parentId':'routes/dashboard.guilds.$guild','path':'meetings/:meeting','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard.guilds.$guild.meetings.$meeting-MHXAOJIV.js','imports':['/build/_shared/chunk-INZJGYT5.js','/build/_shared/chunk-GWAJ7UPQ.js','/build/_shared/chunk-MY5QWXBO.js','/build/_shared/chunk-C7F7NDP2.js','/build/_shared/chunk-F5VQJM3F.js','/build/_shared/chunk-RO5ECSHB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard.guilds.$guild.meetings._index':{'id':'routes/dashboard.guilds.$guild.meetings._index','parentId':'routes/dashboard.guilds.$guild','path':'meetings','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard.guilds.$guild.meetings._index-JZZCERBV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard.guilds._index':{'id':'routes/dashboard.guilds._index','parentId':'routes/dashboard','path':'guilds','index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard.guilds._index-E7Q66QFE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-V4RODW7N.js','imports':['/build/_shared/chunk-ZLSDYXKO.js','/build/_shared/chunk-C7F7NDP2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/new':{'id':'routes/new','parentId':'root','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/new-RYJPUENT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/privacy':{'id':'routes/privacy','parentId':'root','path':'privacy','index':undefined,'caseSensitive':undefined,'module':'/build/routes/privacy-T4V2DBJI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/terms':{'id':'routes/terms','parentId':'root','path':'terms','index':undefined,'caseSensitive':undefined,'module':'/build/routes/terms-RPRJNZUP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/transcript.$transcript':{'id':'routes/transcript.$transcript','parentId':'root','path':'transcript/:transcript','index':undefined,'caseSensitive':undefined,'module':'/build/routes/transcript.$transcript-AIOFREF5.js','imports':['/build/_shared/chunk-W5IRXHEL.js','/build/_shared/chunk-F5VQJM3F.js','/build/_shared/chunk-RO5ECSHB.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/transcript._index':{'id':'routes/transcript._index','parentId':'root','path':'transcript','index':true,'caseSensitive':undefined,'module':'/build/routes/transcript._index-3WUFSE5L.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-0AC456AC.js'};", "\nimport * as entryServer from \"/Users/xipuli/Desktop/projects.nosync/HearHear-Webapp/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/dashboard.guilds.$guild.meetings.$meeting.tsx\";\nimport * as route2 from \"./routes/dashboard.guilds.$guild.meetings._index.tsx\";\nimport * as route3 from \"./routes/dashboard.guilds.$guild.tsx\";\nimport * as route4 from \"./routes/dashboard.guilds._index.tsx\";\nimport * as route5 from \"./routes/transcript.$transcript.tsx\";\nimport * as route6 from \"./routes/auth.discord.callback.tsx\";\nimport * as route7 from \"./routes/auth.discord.logout.tsx\";\nimport * as route8 from \"./routes/transcript._index.tsx\";\nimport * as route9 from \"./routes/dashboard._index.tsx\";\nimport * as route10 from \"./routes/auth.discord.tsx\";\nimport * as route11 from \"./routes/dashboard.tsx\";\nimport * as route12 from \"./routes/privacy.tsx\";\nimport * as route13 from \"./routes/_index.tsx\";\nimport * as route14 from \"./routes/login.tsx\";\nimport * as route15 from \"./routes/terms.tsx\";\nimport * as route16 from \"./routes/api.tsx\";\nimport * as route17 from \"./routes/new.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard.guilds.$guild.meetings.$meeting\": {\n      id: \"routes/dashboard.guilds.$guild.meetings.$meeting\",\n      parentId: \"routes/dashboard.guilds.$guild\",\n      path: \"meetings/:meeting\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard.guilds.$guild.meetings._index\": {\n      id: \"routes/dashboard.guilds.$guild.meetings._index\",\n      parentId: \"routes/dashboard.guilds.$guild\",\n      path: \"meetings\",\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard.guilds.$guild\": {\n      id: \"routes/dashboard.guilds.$guild\",\n      parentId: \"routes/dashboard\",\n      path: \"guilds/:guild\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard.guilds._index\": {\n      id: \"routes/dashboard.guilds._index\",\n      parentId: \"routes/dashboard\",\n      path: \"guilds\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/transcript.$transcript\": {\n      id: \"routes/transcript.$transcript\",\n      parentId: \"root\",\n      path: \"transcript/:transcript\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth.discord.callback\": {\n      id: \"routes/auth.discord.callback\",\n      parentId: \"routes/auth.discord\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/auth.discord.logout\": {\n      id: \"routes/auth.discord.logout\",\n      parentId: \"routes/auth.discord\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/transcript._index\": {\n      id: \"routes/transcript._index\",\n      parentId: \"root\",\n      path: \"transcript\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/dashboard._index\": {\n      id: \"routes/dashboard._index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/auth.discord\": {\n      id: \"routes/auth.discord\",\n      parentId: \"root\",\n      path: \"auth/discord\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/privacy\": {\n      id: \"routes/privacy\",\n      parentId: \"root\",\n      path: \"privacy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/terms\": {\n      id: \"routes/terms\",\n      parentId: \"root\",\n      path: \"terms\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/api\": {\n      id: \"routes/api\",\n      parentId: \"root\",\n      path: \"api\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/new\": {\n      id: \"routes/new\",\n      parentId: \"root\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_react", "import_react", "import_dotenv", "strftime", "import_react", "import_jsx_dev_runtime", "preBuiltTemplates", "import_jsx_dev_runtime", "v", "import_outline", "import_react", "import_react", "import_jsx_dev_runtime", "data", "import_jsx_dev_runtime", "loader", "ReactMarkdown", "import_jsx_dev_runtime", "loader", "import_react", "import_lottie_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "guild", "loader", "import_node", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_solid", "import_jsx_dev_runtime", "loader", "action", "json", "loader", "loader", "action", "loader", "import_node", "loader", "action", "Index", "loader", "import_node", "import_jsx_dev_runtime", "import_lottie_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "loader", "action", "loader", "meta", "import_react", "import_dotenv", "import_react", "import_react", "import_outline", "import_jsx_dev_runtime", "import_outline", "import_jsx_dev_runtime", "loader", "meta", "guildId", "meta", "import_jsx_dev_runtime", "Index", "meta", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_outline", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "meta", "Index", "meta", "import_jsx_dev_runtime", "action", "import_node", "json", "import_react", "import_jsx_dev_runtime"]
}
